/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type SteamUgcQuery = SteamUGCQuery;

declare enum SteamUGCQuery {
    RankedByVote = 0,
    RankedByPublicationDate = 1,
    AcceptedForGameRankedByAcceptanceDate = 2,
    RankedByTrend = 3,
    FavoritedByFriendsRankedByPublicationDate = 4,
    CreatedByFriendsRankedByPublicationDate = 5,
    RankedByNumTimesReported = 6,
    CreatedByFollowedUsersRankedByPublicationDate = 7,
    NotYetRated = 8,
    RankedByTotalVotesAsc = 9,
    RankedByVotesUp = 10,
    RankedByTextSearch = 11,
    RankedByTotalUniqueSubscriptions = 12,
    RankedByPlaytimeTrend = 13,
    RankedByTotalPlaytime = 14,
    RankedByAveragePlaytimeTrend = 15,
    RankedByLifetimeAveragePlaytime = 16,
    RankedByPlaytimeSessionsTrend = 17,
    RankedByLifetimePlaytimeSessions = 18,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type SteamUgcMatchingUgcType = SteamUGCMatchingUGCType;

declare enum SteamUGCMatchingUGCType {
    Items = 0,
    Items_Mtx = 1,
    Items_ReadyToUse = 2,
    Collections = 3,
    Artwork = 4,
    Videos = 5,
    Screenshots = 6,
    AllGuides = 7,
    WebGuides = 8,
    IntegratedGuides = 9,
    UsableInGame = 10,
    ControllerBindings = 11,
    GameManagedItems = 12,
    All = -1,
}

declare enum SteamUniverse {
    Invalid = 0,
    Internal = 3,
    Dev = 4,
    Beta = 2,
    Public = 1,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type GameState = DOTA_GameState;

declare enum DOTA_GameState {
    DOTA_GAMERULES_STATE_INIT = 0,
    DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD = 1,
    DOTA_GAMERULES_STATE_HERO_SELECTION = 4,
    DOTA_GAMERULES_STATE_STRATEGY_TIME = 5,
    DOTA_GAMERULES_STATE_PRE_GAME = 8,
    DOTA_GAMERULES_STATE_GAME_IN_PROGRESS = 10,
    DOTA_GAMERULES_STATE_POST_GAME = 11,
    DOTA_GAMERULES_STATE_DISCONNECT = 12,
    DOTA_GAMERULES_STATE_TEAM_SHOWCASE = 6,
    DOTA_GAMERULES_STATE_CUSTOM_GAME_SETUP = 2,
    DOTA_GAMERULES_STATE_WAIT_FOR_MAP_TO_LOAD = 7,
    DOTA_GAMERULES_STATE_SCENARIO_SETUP = 9,
    DOTA_GAMERULES_STATE_PLAYER_DRAFT = 3,
    DOTA_GAMERULES_STATE_LAST = 0,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type GcTeam = DOTA_GC_TEAM;

declare enum DOTA_GC_TEAM {
    DOTA_GC_TEAM_GOOD_GUYS = 0,
    DOTA_GC_TEAM_BAD_GUYS = 1,
    DOTA_GC_TEAM_BROADCASTER = 2,
    DOTA_GC_TEAM_SPECTATOR = 3,
    DOTA_GC_TEAM_PLAYER_POOL = 4,
    DOTA_GC_TEAM_NOTEAM = 5,
    DOTA_GC_TEAM_CUSTOM_1 = 6,
    DOTA_GC_TEAM_CUSTOM_2 = 7,
    DOTA_GC_TEAM_CUSTOM_3 = 8,
    DOTA_GC_TEAM_CUSTOM_4 = 9,
    DOTA_GC_TEAM_CUSTOM_5 = 10,
    DOTA_GC_TEAM_CUSTOM_6 = 11,
    DOTA_GC_TEAM_CUSTOM_7 = 12,
    DOTA_GC_TEAM_CUSTOM_8 = 13,
    DOTA_GC_TEAM_NEUTRALS = 14,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type GameMode = DOTA_GameMode;

declare enum DOTA_GameMode {
    DOTA_GAMEMODE_NONE = 0,
    DOTA_GAMEMODE_AP = 1,
    DOTA_GAMEMODE_CM = 2,
    DOTA_GAMEMODE_RD = 3,
    DOTA_GAMEMODE_SD = 4,
    DOTA_GAMEMODE_AR = 5,
    DOTA_GAMEMODE_INTRO = 6,
    DOTA_GAMEMODE_HW = 7,
    DOTA_GAMEMODE_REVERSE_CM = 8,
    DOTA_GAMEMODE_XMAS = 9,
    DOTA_GAMEMODE_TUTORIAL = 10,
    DOTA_GAMEMODE_MO = 11,
    DOTA_GAMEMODE_LP = 12,
    DOTA_GAMEMODE_POOL1 = 13,
    DOTA_GAMEMODE_FH = 14,
    DOTA_GAMEMODE_CUSTOM = 15,
    DOTA_GAMEMODE_CD = 16,
    DOTA_GAMEMODE_BD = 17,
    DOTA_GAMEMODE_ABILITY_DRAFT = 18,
    DOTA_GAMEMODE_EVENT = 19,
    DOTA_GAMEMODE_ARDM = 20,
    DOTA_GAMEMODE_1V1MID = 21,
    DOTA_GAMEMODE_ALL_DRAFT = 22,
    DOTA_GAMEMODE_TURBO = 23,
    DOTA_GAMEMODE_MUTATION = 24,
    DOTA_GAMEMODE_COACHES_CHALLENGE = 25,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type ConnectionState = DOTAConnectionState_t;

declare enum DOTAConnectionState_t {
    DOTA_CONNECTION_STATE_UNKNOWN = 0,
    DOTA_CONNECTION_STATE_NOT_YET_CONNECTED = 1,
    DOTA_CONNECTION_STATE_CONNECTED = 2,
    DOTA_CONNECTION_STATE_DISCONNECTED = 3,
    DOTA_CONNECTION_STATE_ABANDONED = 4,
    DOTA_CONNECTION_STATE_LOADING = 5,
    DOTA_CONNECTION_STATE_FAILED = 6,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type UnitOrder = dotaunitorder_t;

declare enum dotaunitorder_t {
    DOTA_UNIT_ORDER_NONE = 0,
    DOTA_UNIT_ORDER_MOVE_TO_POSITION = 1,
    DOTA_UNIT_ORDER_MOVE_TO_TARGET = 2,
    DOTA_UNIT_ORDER_ATTACK_MOVE = 3,
    DOTA_UNIT_ORDER_ATTACK_TARGET = 4,
    DOTA_UNIT_ORDER_CAST_POSITION = 5,
    DOTA_UNIT_ORDER_CAST_TARGET = 6,
    DOTA_UNIT_ORDER_CAST_TARGET_TREE = 7,
    DOTA_UNIT_ORDER_CAST_NO_TARGET = 8,
    DOTA_UNIT_ORDER_CAST_TOGGLE = 9,
    DOTA_UNIT_ORDER_HOLD_POSITION = 10,
    DOTA_UNIT_ORDER_TRAIN_ABILITY = 11,
    DOTA_UNIT_ORDER_DROP_ITEM = 12,
    DOTA_UNIT_ORDER_GIVE_ITEM = 13,
    DOTA_UNIT_ORDER_PICKUP_ITEM = 14,
    DOTA_UNIT_ORDER_PICKUP_RUNE = 15,
    DOTA_UNIT_ORDER_PURCHASE_ITEM = 16,
    DOTA_UNIT_ORDER_SELL_ITEM = 17,
    DOTA_UNIT_ORDER_DISASSEMBLE_ITEM = 18,
    DOTA_UNIT_ORDER_MOVE_ITEM = 19,
    DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO = 20,
    DOTA_UNIT_ORDER_STOP = 21,
    DOTA_UNIT_ORDER_TAUNT = 22,
    DOTA_UNIT_ORDER_BUYBACK = 23,
    DOTA_UNIT_ORDER_GLYPH = 24,
    DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH = 25,
    DOTA_UNIT_ORDER_CAST_RUNE = 26,
    DOTA_UNIT_ORDER_PING_ABILITY = 27,
    DOTA_UNIT_ORDER_MOVE_TO_DIRECTION = 28,
    DOTA_UNIT_ORDER_PATROL = 29,
    DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION = 30,
    DOTA_UNIT_ORDER_RADAR = 31,
    DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK = 32,
    DOTA_UNIT_ORDER_CONTINUE = 33,
    DOTA_UNIT_ORDER_VECTOR_TARGET_CANCELED = 34,
    DOTA_UNIT_ORDER_CAST_RIVER_PAINT = 35,
    DOTA_UNIT_ORDER_PREGAME_ADJUST_ITEM_ASSIGNMENT = 36,
    DOTA_UNIT_ORDER_DROP_ITEM_AT_FOUNTAIN = 37,
    DOTA_UNIT_ORDER_TAKE_ITEM_FROM_NEUTRAL_ITEM_STASH = 38,
    DOTA_UNIT_ORDER_MOVE_RELATIVE = 39,
    DOTA_UNIT_ORDER_CAST_TOGGLE_ALT = 40,
    DOTA_UNIT_ORDER_CONSUME_ITEM = 41,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type OverheadAlert = DOTA_OVERHEAD_ALERT;

declare enum DOTA_OVERHEAD_ALERT {
    OVERHEAD_ALERT_GOLD = 0,
    OVERHEAD_ALERT_DENY = 1,
    OVERHEAD_ALERT_CRITICAL = 2,
    OVERHEAD_ALERT_XP = 3,
    OVERHEAD_ALERT_BONUS_SPELL_DAMAGE = 4,
    OVERHEAD_ALERT_MISS = 5,
    OVERHEAD_ALERT_DAMAGE = 6,
    OVERHEAD_ALERT_EVADE = 7,
    OVERHEAD_ALERT_BLOCK = 8,
    OVERHEAD_ALERT_BONUS_POISON_DAMAGE = 9,
    OVERHEAD_ALERT_HEAL = 10,
    OVERHEAD_ALERT_MANA_ADD = 11,
    OVERHEAD_ALERT_MANA_LOSS = 12,
    OVERHEAD_ALERT_LAST_HIT_EARLY = 13,
    OVERHEAD_ALERT_LAST_HIT_CLOSE = 14,
    OVERHEAD_ALERT_LAST_HIT_MISS = 15,
    OVERHEAD_ALERT_MAGICAL_BLOCK = 16,
    OVERHEAD_ALERT_INCOMING_DAMAGE = 17,
    OVERHEAD_ALERT_OUTGOING_DAMAGE = 18,
    OVERHEAD_ALERT_DISABLE_RESIST = 19,
    OVERHEAD_ALERT_DEATH = 20,
    OVERHEAD_ALERT_BLOCKED = 21,
    OVERHEAD_ALERT_ITEM_RECEIVED = 22,
    OVERHEAD_ALERT_SHARD = 23,
    OVERHEAD_ALERT_DEADLY_BLOW = 24,
    OVERHEAD_ALERT_FORCE_MISS = 25,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type HeroPickState = DOTA_HeroPickState;

declare enum DOTA_HeroPickState {
    DOTA_HEROPICK_STATE_NONE = 0,
    DOTA_HEROPICK_STATE_AP_SELECT = 1,
    DOTA_HEROPICK_STATE_SD_SELECT = 2,
    DOTA_HEROPICK_STATE_INTRO_SELECT_UNUSED = 3,
    DOTA_HEROPICK_STATE_RD_SELECT_UNUSED = 4,
    DOTA_HEROPICK_STATE_CM_INTRO = 5,
    DOTA_HEROPICK_STATE_CM_CAPTAINPICK = 6,
    DOTA_HEROPICK_STATE_CM_BAN1 = 7,
    DOTA_HEROPICK_STATE_CM_BAN2 = 8,
    DOTA_HEROPICK_STATE_CM_BAN3 = 9,
    DOTA_HEROPICK_STATE_CM_BAN4 = 10,
    DOTA_HEROPICK_STATE_CM_BAN5 = 11,
    DOTA_HEROPICK_STATE_CM_BAN6 = 12,
    DOTA_HEROPICK_STATE_CM_BAN7 = 13,
    DOTA_HEROPICK_STATE_CM_BAN8 = 14,
    DOTA_HEROPICK_STATE_CM_BAN9 = 15,
    DOTA_HEROPICK_STATE_CM_BAN10 = 16,
    DOTA_HEROPICK_STATE_CM_BAN11 = 17,
    DOTA_HEROPICK_STATE_CM_BAN12 = 18,
    DOTA_HEROPICK_STATE_CM_BAN13 = 19,
    DOTA_HEROPICK_STATE_CM_BAN14 = 20,
    DOTA_HEROPICK_STATE_CM_SELECT1 = 21,
    DOTA_HEROPICK_STATE_CM_SELECT2 = 22,
    DOTA_HEROPICK_STATE_CM_SELECT3 = 23,
    DOTA_HEROPICK_STATE_CM_SELECT4 = 24,
    DOTA_HEROPICK_STATE_CM_SELECT5 = 25,
    DOTA_HEROPICK_STATE_CM_SELECT6 = 26,
    DOTA_HEROPICK_STATE_CM_SELECT7 = 27,
    DOTA_HEROPICK_STATE_CM_SELECT8 = 28,
    DOTA_HEROPICK_STATE_CM_SELECT9 = 29,
    DOTA_HEROPICK_STATE_CM_SELECT10 = 30,
    DOTA_HEROPICK_STATE_CM_PICK = 31,
    DOTA_HEROPICK_STATE_AR_SELECT = 32,
    DOTA_HEROPICK_STATE_MO_SELECT = 33,
    DOTA_HEROPICK_STATE_FH_SELECT = 34,
    DOTA_HEROPICK_STATE_CD_INTRO = 35,
    DOTA_HEROPICK_STATE_CD_CAPTAINPICK = 36,
    DOTA_HEROPICK_STATE_CD_BAN1 = 37,
    DOTA_HEROPICK_STATE_CD_BAN2 = 38,
    DOTA_HEROPICK_STATE_CD_BAN3 = 39,
    DOTA_HEROPICK_STATE_CD_BAN4 = 40,
    DOTA_HEROPICK_STATE_CD_BAN5 = 41,
    DOTA_HEROPICK_STATE_CD_BAN6 = 42,
    DOTA_HEROPICK_STATE_CD_SELECT1 = 43,
    DOTA_HEROPICK_STATE_CD_SELECT2 = 44,
    DOTA_HEROPICK_STATE_CD_SELECT3 = 45,
    DOTA_HEROPICK_STATE_CD_SELECT4 = 46,
    DOTA_HEROPICK_STATE_CD_SELECT5 = 47,
    DOTA_HEROPICK_STATE_CD_SELECT6 = 48,
    DOTA_HEROPICK_STATE_CD_SELECT7 = 49,
    DOTA_HEROPICK_STATE_CD_SELECT8 = 50,
    DOTA_HEROPICK_STATE_CD_SELECT9 = 51,
    DOTA_HEROPICK_STATE_CD_SELECT10 = 52,
    DOTA_HEROPICK_STATE_CD_PICK = 53,
    DOTA_HEROPICK_STATE_BD_SELECT = 54,
    DOTA_HERO_PICK_STATE_ABILITY_DRAFT_SELECT = 55,
    DOTA_HERO_PICK_STATE_ARDM_SELECT = 56,
    DOTA_HEROPICK_STATE_ALL_DRAFT_SELECT = 57,
    DOTA_HERO_PICK_STATE_CUSTOMGAME_SELECT = 58,
    DOTA_HEROPICK_STATE_SELECT_PENALTY = 59,
    DOTA_HEROPICK_STATE_CUSTOM_PICK_RULES = 60,
    DOTA_HEROPICK_STATE_SCENARIO_PICK = 61,
    DOTA_HEROPICK_STATE_COUNT = 62,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type DotaTeam = DOTATeam_t;

declare enum DOTATeam_t {
    DOTA_TEAM_FIRST = 2,
    DOTA_TEAM_GOODGUYS = 2,
    DOTA_TEAM_BADGUYS = 3,
    DOTA_TEAM_NEUTRALS = 4,
    DOTA_TEAM_NOTEAM = 5,
    DOTA_TEAM_CUSTOM_1 = 6,
    DOTA_TEAM_CUSTOM_2 = 7,
    DOTA_TEAM_CUSTOM_3 = 8,
    DOTA_TEAM_CUSTOM_4 = 9,
    DOTA_TEAM_CUSTOM_5 = 10,
    DOTA_TEAM_CUSTOM_6 = 11,
    DOTA_TEAM_CUSTOM_7 = 12,
    DOTA_TEAM_CUSTOM_8 = 13,
    DOTA_TEAM_DRAFT_POOL = 14,
    DOTA_TEAM_COUNT = 15,
    DOTA_TEAM_CUSTOM_MIN = 6,
    DOTA_TEAM_CUSTOM_MAX = 13,
    DOTA_TEAM_CUSTOM_COUNT = 8,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type RuneType = DOTA_RUNES;

declare enum DOTA_RUNES {
    DOTA_RUNE_INVALID = -1,
    DOTA_RUNE_DOUBLEDAMAGE = 0,
    DOTA_RUNE_HASTE = 1,
    DOTA_RUNE_ILLUSION = 2,
    DOTA_RUNE_INVISIBILITY = 3,
    DOTA_RUNE_REGENERATION = 4,
    DOTA_RUNE_BOUNTY = 5,
    DOTA_RUNE_ARCANE = 6,
    DOTA_RUNE_WATER = 7,
    DOTA_RUNE_XP = 8,
    DOTA_RUNE_SHIELD = 9,
    DOTA_RUNE_COUNT = 10,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type UnitTargetTeam = DOTA_UNIT_TARGET_TEAM;

declare enum DOTA_UNIT_TARGET_TEAM {
    DOTA_UNIT_TARGET_TEAM_NONE = 0,
    DOTA_UNIT_TARGET_TEAM_FRIENDLY = 1,
    DOTA_UNIT_TARGET_TEAM_ENEMY = 2,
    DOTA_UNIT_TARGET_TEAM_CUSTOM = 4,
    DOTA_UNIT_TARGET_TEAM_BOTH = 3,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type UnitTargetType = DOTA_UNIT_TARGET_TYPE;

declare enum DOTA_UNIT_TARGET_TYPE {
    DOTA_UNIT_TARGET_NONE = 0,
    DOTA_UNIT_TARGET_HERO = 1,
    DOTA_UNIT_TARGET_CREEP = 2,
    DOTA_UNIT_TARGET_BUILDING = 4,
    DOTA_UNIT_TARGET_COURIER = 16,
    DOTA_UNIT_TARGET_OTHER = 32,
    DOTA_UNIT_TARGET_TREE = 64,
    DOTA_UNIT_TARGET_CUSTOM = 128,
    DOTA_UNIT_TARGET_SELF = 256,
    DOTA_UNIT_TARGET_BASIC = 18,
    DOTA_UNIT_TARGET_ALL = 55,
    DOTA_UNIT_TARGET_HEROES_AND_CREEPS = 19,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type UnitTargetFlags = DOTA_UNIT_TARGET_FLAGS;

declare enum DOTA_UNIT_TARGET_FLAGS {
    DOTA_UNIT_TARGET_FLAG_NONE = 0,
    DOTA_UNIT_TARGET_FLAG_RANGED_ONLY = 2,
    DOTA_UNIT_TARGET_FLAG_MELEE_ONLY = 4,
    DOTA_UNIT_TARGET_FLAG_DEAD = 8,
    DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES = 16,
    DOTA_UNIT_TARGET_FLAG_NOT_MAGIC_IMMUNE_ALLIES = 32,
    DOTA_UNIT_TARGET_FLAG_INVULNERABLE = 64,
    DOTA_UNIT_TARGET_FLAG_FOW_VISIBLE = 128,
    DOTA_UNIT_TARGET_FLAG_NO_INVIS = 256,
    DOTA_UNIT_TARGET_FLAG_NOT_ANCIENTS = 512,
    DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED = 1024,
    DOTA_UNIT_TARGET_FLAG_NOT_DOMINATED = 2048,
    DOTA_UNIT_TARGET_FLAG_NOT_SUMMONED = 4096,
    DOTA_UNIT_TARGET_FLAG_NOT_ILLUSIONS = 8192,
    DOTA_UNIT_TARGET_FLAG_NOT_ATTACK_IMMUNE = 16384,
    DOTA_UNIT_TARGET_FLAG_MANA_ONLY = 32768,
    DOTA_UNIT_TARGET_FLAG_CHECK_DISABLE_HELP = 65536,
    DOTA_UNIT_TARGET_FLAG_NOT_CREEP_HERO = 131072,
    DOTA_UNIT_TARGET_FLAG_OUT_OF_WORLD = 262144,
    DOTA_UNIT_TARGET_FLAG_NOT_NIGHTMARED = 524288,
    DOTA_UNIT_TARGET_FLAG_PREFER_ENEMIES = 1048576,
    DOTA_UNIT_TARGET_FLAG_RESPECT_OBSTRUCTIONS = 2097152,
    DOTA_UNIT_TARGET_FLAG_CAN_BE_SEEN = 384,
}

declare enum DOTALimits_t {
    /**
     * Max number of players connected to the server including spectators.
     */ DOTA_MAX_PLAYERS = 64,
    /**
     * Max number of players per team.
     */
    DOTA_MAX_TEAM = 24,
    /**
     * Max number of player teams supported.
     */
    DOTA_MAX_PLAYER_TEAMS = 10,
    /**
     * Max number of non-spectator players supported.
     */
    DOTA_MAX_TEAM_PLAYERS = 24,
    /**
     * How many spectators can watch.
     */
    DOTA_MAX_SPECTATOR_TEAM_SIZE = 40,
    /**
     * Max number of viewers in a spectator lobby.
     */
    DOTA_MAX_SPECTATOR_LOBBY_SIZE = 15,
    /**
     * Default number of players per team.
     */
    DOTA_DEFAULT_MAX_TEAM = 5,
    /**
     * Default number of non-spectator players supported.
     */
    DOTA_DEFAULT_MAX_TEAM_PLAYERS = 10,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type InventoryFlags = DOTAInventoryFlags_t;

declare enum DOTAInventoryFlags_t {
    DOTA_INVENTORY_ALLOW_NONE = 0,
    DOTA_INVENTORY_ALLOW_MAIN = 1,
    DOTA_INVENTORY_ALLOW_STASH = 2,
    DOTA_INVENTORY_ALLOW_DROP_ON_GROUND = 4,
    DOTA_INVENTORY_ALLOW_DROP_AT_FOUNTAIN = 8,
    DOTA_INVENTORY_LIMIT_DROP_ON_GROUND = 16,
    DOTA_INVENTORY_ALL_ACCESS = 3,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type ModifyGoldReason = EDOTA_ModifyGold_Reason;

declare enum EDOTA_ModifyGold_Reason {
    DOTA_ModifyGold_Unspecified = 0,
    DOTA_ModifyGold_Death = 1,
    DOTA_ModifyGold_Buyback = 2,
    DOTA_ModifyGold_PurchaseConsumable = 3,
    DOTA_ModifyGold_PurchaseItem = 4,
    DOTA_ModifyGold_AbandonedRedistribute = 5,
    DOTA_ModifyGold_SellItem = 6,
    DOTA_ModifyGold_AbilityCost = 7,
    DOTA_ModifyGold_CheatCommand = 8,
    DOTA_ModifyGold_SelectionPenalty = 9,
    DOTA_ModifyGold_GameTick = 10,
    DOTA_ModifyGold_Building = 11,
    DOTA_ModifyGold_HeroKill = 12,
    DOTA_ModifyGold_CreepKill = 13,
    DOTA_ModifyGold_NeutralKill = 14,
    DOTA_ModifyGold_RoshanKill = 15,
    DOTA_ModifyGold_CourierKill = 16,
    DOTA_ModifyGold_BountyRune = 17,
    DOTA_ModifyGold_SharedGold = 18,
    DOTA_ModifyGold_AbilityGold = 19,
    DOTA_ModifyGold_WardKill = 20,
    DOTA_ModifyGold_CourierKilledByThisPlayer = 21,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type UnitAttackCapability = DOTAUnitAttackCapability_t;

declare enum DOTAUnitAttackCapability_t {
    DOTA_UNIT_CAP_NO_ATTACK = 0,
    DOTA_UNIT_CAP_MELEE_ATTACK = 1,
    DOTA_UNIT_CAP_RANGED_ATTACK = 2,
    DOTA_UNIT_CAP_RANGED_ATTACK_DIRECTIONAL = 4,
    DOTA_UNIT_ATTACK_CAPABILITY_BIT_COUNT = 3,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type UnitMoveCapability = DOTAUnitMoveCapability_t;

declare enum DOTAUnitMoveCapability_t {
    DOTA_UNIT_CAP_MOVE_NONE = 0,
    DOTA_UNIT_CAP_MOVE_GROUND = 1,
    DOTA_UNIT_CAP_MOVE_FLY = 2,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type ItemShareability = EShareAbility;

declare enum EShareAbility {
    ITEM_FULLY_SHAREABLE = 0,
    ITEM_PARTIALLY_SHAREABLE = 1,
    ITEM_NOT_SHAREABLE = 2,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type MusicStatus = DOTAMusicStatus_t;

declare enum DOTAMusicStatus_t {
    DOTA_MUSIC_STATUS_NONE = 0,
    DOTA_MUSIC_STATUS_EXPLORATION = 1,
    DOTA_MUSIC_STATUS_BATTLE = 2,
    DOTA_MUSIC_STATUS_PRE_GAME_EXPLORATION = 3,
    DOTA_MUSIC_STATUS_DEAD = 4,
    DOTA_MUSIC_STATUS_LAST = 5,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type AbilityBehavior = DOTA_ABILITY_BEHAVIOR;

declare enum DOTA_ABILITY_BEHAVIOR {
    DOTA_ABILITY_BEHAVIOR_NONE = 0,
    DOTA_ABILITY_BEHAVIOR_HIDDEN = 1,
    DOTA_ABILITY_BEHAVIOR_PASSIVE = 2,
    DOTA_ABILITY_BEHAVIOR_NO_TARGET = 4,
    DOTA_ABILITY_BEHAVIOR_UNIT_TARGET = 8,
    DOTA_ABILITY_BEHAVIOR_POINT = 16,
    DOTA_ABILITY_BEHAVIOR_AOE = 32,
    DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE = 64,
    DOTA_ABILITY_BEHAVIOR_CHANNELLED = 128,
    DOTA_ABILITY_BEHAVIOR_ITEM = 256,
    DOTA_ABILITY_BEHAVIOR_TOGGLE = 512,
    DOTA_ABILITY_BEHAVIOR_DIRECTIONAL = 1024,
    DOTA_ABILITY_BEHAVIOR_IMMEDIATE = 2048,
    DOTA_ABILITY_BEHAVIOR_AUTOCAST = 4096,
    DOTA_ABILITY_BEHAVIOR_OPTIONAL_UNIT_TARGET = 8192,
    DOTA_ABILITY_BEHAVIOR_OPTIONAL_POINT = 16384,
    DOTA_ABILITY_BEHAVIOR_OPTIONAL_NO_TARGET = 32768,
    DOTA_ABILITY_BEHAVIOR_AURA = 65536,
    DOTA_ABILITY_BEHAVIOR_ATTACK = 131072,
    DOTA_ABILITY_BEHAVIOR_DONT_RESUME_MOVEMENT = 262144,
    DOTA_ABILITY_BEHAVIOR_ROOT_DISABLES = 524288,
    DOTA_ABILITY_BEHAVIOR_UNRESTRICTED = 1048576,
    DOTA_ABILITY_BEHAVIOR_IGNORE_PSEUDO_QUEUE = 2097152,
    DOTA_ABILITY_BEHAVIOR_IGNORE_CHANNEL = 4194304,
    DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_MOVEMENT = 8388608,
    DOTA_ABILITY_BEHAVIOR_DONT_ALERT_TARGET = 16777216,
    DOTA_ABILITY_BEHAVIOR_DONT_RESUME_ATTACK = 33554432,
    DOTA_ABILITY_BEHAVIOR_NORMAL_WHEN_STOLEN = 67108864,
    DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING = 134217728,
    DOTA_ABILITY_BEHAVIOR_RUNE_TARGET = 268435456,
    DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_CHANNEL = 536870912,
    DOTA_ABILITY_BEHAVIOR_VECTOR_TARGETING = 1073741824,
    DOTA_ABILITY_BEHAVIOR_LAST_RESORT_POINT = 2147483648,
    DOTA_ABILITY_BEHAVIOR_CAN_SELF_CAST = 4294967296,
    DOTA_ABILITY_BEHAVIOR_SHOW_IN_GUIDES = 8589934592,
    DOTA_ABILITY_BEHAVIOR_UNLOCKED_BY_EFFECT_INDEX = 17179869184,
    DOTA_ABILITY_BEHAVIOR_SUPPRESS_ASSOCIATED_CONSUMABLE = 34359738368,
    DOTA_ABILITY_BEHAVIOR_FREE_DRAW_TARGETING = 68719476736,
    DOTA_ABILITY_BEHAVIOR_IGNORE_SILENCE = 137438953472,
    DOTA_ABILITY_BEHAVIOR_OVERSHOOT = 274877906944,
    DOTA_ABILITY_BEHAVIOR_IGNORE_MUTED = 549755813888,
    DOTA_ABILITY_BEHAVIOR_ALT_CASTABLE = 1099511627776,
    DOTA_ABILITY_BEHAVIOR_SKIP_FOR_KEYBINDS = 4398046511104,
    DOTA_ABILITY_BEHAVIOR_INNATE_UI = 8796093022208,
    DOTA_ABILITY_BEHAVIOR_UNSWAPPABLE = 17592186044416,
    DOTA_ABILITY_BEHAVIOR_DONT_PROC_OTHER_ABILITIES = 35184372088832,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type DamageTypes = DAMAGE_TYPES;

declare enum DAMAGE_TYPES {
    DAMAGE_TYPE_NONE = 0,
    DAMAGE_TYPE_PHYSICAL = 1,
    DAMAGE_TYPE_MAGICAL = 2,
    DAMAGE_TYPE_PURE = 4,
    DAMAGE_TYPE_HP_REMOVAL = 8,
    DAMAGE_TYPE_ABILITY_DEFINED = 22,
    DAMAGE_TYPE_ALL = 7,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type AbilityTypes = ABILITY_TYPES;

declare enum ABILITY_TYPES {
    ABILITY_TYPE_BASIC = 0,
    ABILITY_TYPE_ULTIMATE = 1,
    ABILITY_TYPE_ATTRIBUTES = 2,
    ABILITY_TYPE_HIDDEN = 3,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type SpellImmunityTypes = SPELL_IMMUNITY_TYPES;

declare enum SPELL_IMMUNITY_TYPES {
    SPELL_IMMUNITY_NONE = 0,
    SPELL_IMMUNITY_ALLIES_YES = 1,
    SPELL_IMMUNITY_ALLIES_NO = 2,
    SPELL_IMMUNITY_ENEMIES_YES = 3,
    SPELL_IMMUNITY_ENEMIES_NO = 4,
    SPELL_IMMUNITY_ALLIES_YES_ENEMIES_NO = 5,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type DamageFlag = DOTADamageFlag_t;

declare enum DOTADamageFlag_t {
    DOTA_DAMAGE_FLAG_NONE = 0,
    DOTA_DAMAGE_FLAG_IGNORES_MAGIC_ARMOR = 1,
    DOTA_DAMAGE_FLAG_IGNORES_PHYSICAL_ARMOR = 2,
    DOTA_DAMAGE_FLAG_BYPASSES_INVULNERABILITY = 4,
    DOTA_DAMAGE_FLAG_BYPASSES_PHYSICAL_BLOCK = 8,
    DOTA_DAMAGE_FLAG_REFLECTION = 16,
    DOTA_DAMAGE_FLAG_HPLOSS = 32,
    DOTA_DAMAGE_FLAG_NO_DIRECTOR_EVENT = 64,
    DOTA_DAMAGE_FLAG_NON_LETHAL = 128,
    DOTA_DAMAGE_FLAG_NO_DAMAGE_MULTIPLIERS = 512,
    DOTA_DAMAGE_FLAG_NO_SPELL_AMPLIFICATION = 1024,
    DOTA_DAMAGE_FLAG_DONT_DISPLAY_DAMAGE_IF_SOURCE_HIDDEN = 2048,
    DOTA_DAMAGE_FLAG_NO_SPELL_LIFESTEAL = 4096,
    DOTA_DAMAGE_FLAG_PROPERTY_FIRE = 8192,
    DOTA_DAMAGE_FLAG_IGNORES_BASE_PHYSICAL_ARMOR = 16384,
    DOTA_DAMAGE_FLAG_SECONDARY_PROJECTILE_ATTACK = 32768,
    DOTA_DAMAGE_FLAG_FORCE_SPELL_AMPLIFICATION = 65536,
    DOTA_DAMAGE_FLAG_MAGIC_AUTO_ATTACK = 131072,
    DOTA_DAMAGE_FLAG_ATTACK_MODIFIER = 262144,
    DOTA_DAMAGE_FLAG_BYPASSES_ALL_BLOCK = 524288,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type ModifyXpReason = EDOTA_ModifyXP_Reason;

declare enum EDOTA_ModifyXP_Reason {
    DOTA_ModifyXP_Unspecified = 0,
    DOTA_ModifyXP_HeroKill = 1,
    DOTA_ModifyXP_CreepKill = 2,
    DOTA_ModifyXP_RoshanKill = 3,
    DOTA_ModifyXP_TomeOfKnowledge = 4,
    DOTA_ModifyXP_Outpost = 5,
    DOTA_ModifyXP_CatchUp = 6,
    DOTA_ModifyXP_HeroAbility = 7,
    DOTA_ModifyXP_MAX = 8,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type GameActivity = GameActivity_t;

declare enum GameActivity_t {
    ACT_DOTA_IDLE = 1500,
    ACT_DOTA_IDLE_RARE = 1501,
    ACT_DOTA_RUN = 1502,
    ACT_DOTA_ATTACK = 1503,
    ACT_DOTA_ATTACK2 = 1504,
    ACT_DOTA_ATTACK_EVENT = 1505,
    ACT_DOTA_DIE = 1506,
    ACT_DOTA_FLINCH = 1507,
    ACT_DOTA_FLAIL = 1508,
    ACT_DOTA_DISABLED = 1509,
    ACT_DOTA_CAST_ABILITY_1 = 1510,
    ACT_DOTA_CAST_ABILITY_2 = 1511,
    ACT_DOTA_CAST_ABILITY_3 = 1512,
    ACT_DOTA_CAST_ABILITY_4 = 1513,
    ACT_DOTA_CAST_ABILITY_5 = 1514,
    ACT_DOTA_CAST_ABILITY_6 = 1515,
    ACT_DOTA_OVERRIDE_ABILITY_1 = 1516,
    ACT_DOTA_OVERRIDE_ABILITY_2 = 1517,
    ACT_DOTA_OVERRIDE_ABILITY_3 = 1518,
    ACT_DOTA_OVERRIDE_ABILITY_4 = 1519,
    ACT_DOTA_CHANNEL_ABILITY_1 = 1520,
    ACT_DOTA_CHANNEL_ABILITY_2 = 1521,
    ACT_DOTA_CHANNEL_ABILITY_3 = 1522,
    ACT_DOTA_CHANNEL_ABILITY_4 = 1523,
    ACT_DOTA_CHANNEL_ABILITY_5 = 1524,
    ACT_DOTA_CHANNEL_ABILITY_6 = 1525,
    ACT_DOTA_CHANNEL_END_ABILITY_1 = 1526,
    ACT_DOTA_CHANNEL_END_ABILITY_2 = 1527,
    ACT_DOTA_CHANNEL_END_ABILITY_3 = 1528,
    ACT_DOTA_CHANNEL_END_ABILITY_4 = 1529,
    ACT_DOTA_CHANNEL_END_ABILITY_5 = 1530,
    ACT_DOTA_CHANNEL_END_ABILITY_6 = 1531,
    ACT_DOTA_CONSTANT_LAYER = 1532,
    ACT_DOTA_CAPTURE = 1533,
    ACT_DOTA_SPAWN = 1534,
    ACT_DOTA_KILLTAUNT = 1535,
    ACT_DOTA_TAUNT = 1536,
    ACT_DOTA_THIRST = 1537,
    ACT_DOTA_CAST_DRAGONBREATH = 1538,
    ACT_DOTA_ECHO_SLAM = 1539,
    ACT_DOTA_CAST_ABILITY_1_END = 1540,
    ACT_DOTA_CAST_ABILITY_2_END = 1541,
    ACT_DOTA_CAST_ABILITY_3_END = 1542,
    ACT_DOTA_CAST_ABILITY_4_END = 1543,
    ACT_MIRANA_LEAP_END = 1544,
    ACT_WAVEFORM_START = 1545,
    ACT_WAVEFORM_END = 1546,
    ACT_DOTA_CAST_ABILITY_ROT = 1547,
    ACT_DOTA_DIE_SPECIAL = 1548,
    ACT_DOTA_RATTLETRAP_BATTERYASSAULT = 1549,
    ACT_DOTA_RATTLETRAP_POWERCOGS = 1550,
    ACT_DOTA_RATTLETRAP_HOOKSHOT_START = 1551,
    ACT_DOTA_RATTLETRAP_HOOKSHOT_LOOP = 1552,
    ACT_DOTA_RATTLETRAP_HOOKSHOT_END = 1553,
    ACT_STORM_SPIRIT_OVERLOAD_RUN_OVERRIDE = 1554,
    ACT_DOTA_TINKER_REARM1 = 1555,
    ACT_DOTA_TINKER_REARM2 = 1556,
    ACT_DOTA_TINKER_REARM3 = 1557,
    ACT_TINY_AVALANCHE = 1558,
    ACT_TINY_TOSS = 1559,
    ACT_TINY_GROWL = 1560,
    ACT_DOTA_WEAVERBUG_ATTACH = 1561,
    ACT_DOTA_CAST_WILD_AXES_END = 1562,
    ACT_DOTA_CAST_LIFE_BREAK_START = 1563,
    ACT_DOTA_CAST_LIFE_BREAK_END = 1564,
    ACT_DOTA_NIGHTSTALKER_TRANSITION = 1565,
    ACT_DOTA_LIFESTEALER_RAGE = 1566,
    ACT_DOTA_LIFESTEALER_OPEN_WOUNDS = 1567,
    ACT_DOTA_SAND_KING_BURROW_IN = 1568,
    ACT_DOTA_SAND_KING_BURROW_OUT = 1569,
    ACT_DOTA_EARTHSHAKER_TOTEM_ATTACK = 1570,
    ACT_DOTA_WHEEL_LAYER = 1571,
    ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_START = 1572,
    ACT_DOTA_ALCHEMIST_CONCOCTION = 1573,
    ACT_DOTA_JAKIRO_LIQUIDFIRE_START = 1574,
    ACT_DOTA_JAKIRO_LIQUIDFIRE_LOOP = 1575,
    ACT_DOTA_LIFESTEALER_INFEST = 1576,
    ACT_DOTA_LIFESTEALER_INFEST_END = 1577,
    ACT_DOTA_LASSO_LOOP = 1578,
    ACT_DOTA_ALCHEMIST_CONCOCTION_THROW = 1579,
    ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_END = 1580,
    ACT_DOTA_CAST_COLD_SNAP = 1581,
    ACT_DOTA_CAST_GHOST_WALK = 1582,
    ACT_DOTA_CAST_TORNADO = 1583,
    ACT_DOTA_CAST_EMP = 1584,
    ACT_DOTA_CAST_ALACRITY = 1585,
    ACT_DOTA_CAST_CHAOS_METEOR = 1586,
    ACT_DOTA_CAST_SUN_STRIKE = 1587,
    ACT_DOTA_CAST_FORGE_SPIRIT = 1588,
    ACT_DOTA_CAST_ICE_WALL = 1589,
    ACT_DOTA_CAST_DEAFENING_BLAST = 1590,
    ACT_DOTA_VICTORY = 1591,
    ACT_DOTA_DEFEAT = 1592,
    ACT_DOTA_SPIRIT_BREAKER_CHARGE_POSE = 1593,
    ACT_DOTA_SPIRIT_BREAKER_CHARGE_END = 1594,
    ACT_DOTA_TELEPORT = 1595,
    ACT_DOTA_TELEPORT_END = 1596,
    ACT_DOTA_CAST_REFRACTION = 1597,
    ACT_DOTA_CAST_ABILITY_7 = 1598,
    ACT_DOTA_CANCEL_SIREN_SONG = 1599,
    ACT_DOTA_CHANNEL_ABILITY_7 = 1600,
    ACT_DOTA_LOADOUT = 1601,
    ACT_DOTA_FORCESTAFF_END = 1602,
    ACT_DOTA_POOF_END = 1603,
    ACT_DOTA_SLARK_POUNCE = 1604,
    ACT_DOTA_MAGNUS_SKEWER_START = 1605,
    ACT_DOTA_MAGNUS_SKEWER_END = 1606,
    ACT_DOTA_MEDUSA_STONE_GAZE = 1607,
    ACT_DOTA_RELAX_START = 1608,
    ACT_DOTA_RELAX_LOOP = 1609,
    ACT_DOTA_RELAX_END = 1610,
    ACT_DOTA_CENTAUR_STAMPEDE = 1611,
    ACT_DOTA_BELLYACHE_START = 1612,
    ACT_DOTA_BELLYACHE_LOOP = 1613,
    ACT_DOTA_BELLYACHE_END = 1614,
    ACT_DOTA_ROQUELAIRE_LAND = 1615,
    ACT_DOTA_ROQUELAIRE_LAND_IDLE = 1616,
    ACT_DOTA_GREEVIL_CAST = 1617,
    ACT_DOTA_GREEVIL_OVERRIDE_ABILITY = 1618,
    ACT_DOTA_GREEVIL_HOOK_START = 1619,
    ACT_DOTA_GREEVIL_HOOK_END = 1620,
    ACT_DOTA_GREEVIL_BLINK_BONE = 1621,
    ACT_DOTA_IDLE_SLEEPING = 1622,
    ACT_DOTA_INTRO = 1623,
    ACT_DOTA_GESTURE_POINT = 1624,
    ACT_DOTA_GESTURE_ACCENT = 1625,
    ACT_DOTA_SLEEPING_END = 1626,
    ACT_DOTA_AMBUSH = 1627,
    ACT_DOTA_ITEM_LOOK = 1628,
    ACT_DOTA_STARTLE = 1629,
    ACT_DOTA_FRUSTRATION = 1630,
    ACT_DOTA_TELEPORT_REACT = 1631,
    ACT_DOTA_TELEPORT_END_REACT = 1632,
    ACT_DOTA_SHRUG = 1633,
    ACT_DOTA_RELAX_LOOP_END = 1634,
    ACT_DOTA_PRESENT_ITEM = 1635,
    ACT_DOTA_IDLE_IMPATIENT = 1636,
    ACT_DOTA_SHARPEN_WEAPON = 1637,
    ACT_DOTA_SHARPEN_WEAPON_OUT = 1638,
    ACT_DOTA_IDLE_SLEEPING_END = 1639,
    ACT_DOTA_BRIDGE_DESTROY = 1640,
    ACT_DOTA_TAUNT_SNIPER = 1641,
    ACT_DOTA_DEATH_BY_SNIPER = 1642,
    ACT_DOTA_LOOK_AROUND = 1643,
    ACT_DOTA_CAGED_CREEP_RAGE = 1644,
    ACT_DOTA_CAGED_CREEP_RAGE_OUT = 1645,
    ACT_DOTA_CAGED_CREEP_SMASH = 1646,
    ACT_DOTA_CAGED_CREEP_SMASH_OUT = 1647,
    ACT_DOTA_IDLE_IMPATIENT_SWORD_TAP = 1648,
    ACT_DOTA_INTRO_LOOP = 1649,
    ACT_DOTA_BRIDGE_THREAT = 1650,
    ACT_DOTA_DAGON = 1651,
    ACT_DOTA_CAST_ABILITY_2_ES_ROLL_START = 1652,
    ACT_DOTA_CAST_ABILITY_2_ES_ROLL = 1653,
    ACT_DOTA_CAST_ABILITY_2_ES_ROLL_END = 1654,
    ACT_DOTA_NIAN_PIN_START = 1655,
    ACT_DOTA_NIAN_PIN_LOOP = 1656,
    ACT_DOTA_NIAN_PIN_END = 1657,
    ACT_DOTA_LEAP_STUN = 1658,
    ACT_DOTA_LEAP_SWIPE = 1659,
    ACT_DOTA_NIAN_INTRO_LEAP = 1660,
    ACT_DOTA_AREA_DENY = 1661,
    ACT_DOTA_NIAN_PIN_TO_STUN = 1662,
    ACT_DOTA_RAZE_1 = 1663,
    ACT_DOTA_RAZE_2 = 1664,
    ACT_DOTA_RAZE_3 = 1665,
    ACT_DOTA_UNDYING_DECAY = 1666,
    ACT_DOTA_UNDYING_SOUL_RIP = 1667,
    ACT_DOTA_UNDYING_TOMBSTONE = 1668,
    ACT_DOTA_WHIRLING_AXES_RANGED = 1669,
    ACT_DOTA_SHALLOW_GRAVE = 1670,
    ACT_DOTA_COLD_FEET = 1671,
    ACT_DOTA_ICE_VORTEX = 1672,
    ACT_DOTA_CHILLING_TOUCH = 1673,
    ACT_DOTA_ENFEEBLE = 1674,
    ACT_DOTA_FATAL_BONDS = 1675,
    ACT_DOTA_MIDNIGHT_PULSE = 1676,
    ACT_DOTA_ANCESTRAL_SPIRIT = 1677,
    ACT_DOTA_THUNDER_STRIKE = 1678,
    ACT_DOTA_KINETIC_FIELD = 1679,
    ACT_DOTA_STATIC_STORM = 1680,
    ACT_DOTA_MINI_TAUNT = 1681,
    ACT_DOTA_ARCTIC_BURN_END = 1682,
    ACT_DOTA_LOADOUT_RARE = 1683,
    ACT_DOTA_SWIM = 1684,
    ACT_DOTA_FLEE = 1685,
    ACT_DOTA_TROT = 1686,
    ACT_DOTA_SHAKE = 1687,
    ACT_DOTA_SWIM_IDLE = 1688,
    ACT_DOTA_WAIT_IDLE = 1689,
    ACT_DOTA_GREET = 1690,
    ACT_DOTA_TELEPORT_COOP_START = 1691,
    ACT_DOTA_TELEPORT_COOP_WAIT = 1692,
    ACT_DOTA_TELEPORT_COOP_END = 1693,
    ACT_DOTA_TELEPORT_COOP_EXIT = 1694,
    ACT_DOTA_SHOPKEEPER_PET_INTERACT = 1695,
    ACT_DOTA_ITEM_PICKUP = 1696,
    ACT_DOTA_ITEM_DROP = 1697,
    ACT_DOTA_CAPTURE_PET = 1698,
    ACT_DOTA_PET_WARD_OBSERVER = 1699,
    ACT_DOTA_PET_WARD_SENTRY = 1700,
    ACT_DOTA_PET_LEVEL = 1701,
    ACT_DOTA_CAST_BURROW_END = 1702,
    ACT_DOTA_LIFESTEALER_ASSIMILATE = 1703,
    ACT_DOTA_LIFESTEALER_EJECT = 1704,
    ACT_DOTA_ATTACK_EVENT_BASH = 1705,
    ACT_DOTA_CAPTURE_RARE = 1706,
    ACT_DOTA_AW_MAGNETIC_FIELD = 1707,
    ACT_DOTA_CAST_GHOST_SHIP = 1708,
    ACT_DOTA_FXANIM = 1709,
    ACT_DOTA_VICTORY_START = 1710,
    ACT_DOTA_DEFEAT_START = 1711,
    ACT_DOTA_DP_SPIRIT_SIPHON = 1712,
    ACT_DOTA_TRICKS_END = 1713,
    ACT_DOTA_ES_STONE_CALLER = 1714,
    ACT_DOTA_MK_STRIKE = 1715,
    ACT_DOTA_VERSUS = 1716,
    ACT_DOTA_CAPTURE_CARD = 1717,
    ACT_DOTA_MK_SPRING_SOAR = 1718,
    ACT_DOTA_MK_SPRING_END = 1719,
    ACT_DOTA_MK_TREE_SOAR = 1720,
    ACT_DOTA_MK_TREE_END = 1721,
    ACT_DOTA_MK_FUR_ARMY = 1722,
    ACT_DOTA_MK_SPRING_CAST = 1723,
    ACT_DOTA_NECRO_GHOST_SHROUD = 1724,
    ACT_DOTA_OVERRIDE_ARCANA = 1725,
    ACT_DOTA_SLIDE = 1726,
    ACT_DOTA_SLIDE_LOOP = 1727,
    ACT_DOTA_GENERIC_CHANNEL_1 = 1728,
    ACT_DOTA_GS_SOUL_CHAIN = 1729,
    ACT_DOTA_GS_INK_CREATURE = 1730,
    ACT_DOTA_TRANSITION = 1731,
    ACT_DOTA_BLINK_DAGGER = 1732,
    ACT_DOTA_BLINK_DAGGER_END = 1733,
    ACT_DOTA_CUSTOM_TOWER_ATTACK = 1734,
    ACT_DOTA_CUSTOM_TOWER_IDLE = 1735,
    ACT_DOTA_CUSTOM_TOWER_DIE = 1736,
    ACT_DOTA_CAST_COLD_SNAP_ORB = 1737,
    ACT_DOTA_CAST_GHOST_WALK_ORB = 1738,
    ACT_DOTA_CAST_TORNADO_ORB = 1739,
    ACT_DOTA_CAST_EMP_ORB = 1740,
    ACT_DOTA_CAST_ALACRITY_ORB = 1741,
    ACT_DOTA_CAST_CHAOS_METEOR_ORB = 1742,
    ACT_DOTA_CAST_SUN_STRIKE_ORB = 1743,
    ACT_DOTA_CAST_FORGE_SPIRIT_ORB = 1744,
    ACT_DOTA_CAST_ICE_WALL_ORB = 1745,
    ACT_DOTA_CAST_DEAFENING_BLAST_ORB = 1746,
    ACT_DOTA_NOTICE = 1747,
    ACT_DOTA_CAST_ABILITY_2_ALLY = 1748,
    ACT_DOTA_SHUFFLE_L = 1749,
    ACT_DOTA_SHUFFLE_R = 1750,
    ACT_DOTA_OVERRIDE_LOADOUT = 1751,
    ACT_DOTA_TAUNT_SPECIAL = 1752,
    ACT_DOTA_TELEPORT_START = 1753,
    ACT_DOTA_GENERIC_CHANNEL_1_START = 1754,
    ACT_DOTA_CUSTOM_TOWER_IDLE_RARE = 1755,
    ACT_DOTA_CUSTOM_TOWER_TAUNT = 1756,
    ACT_DOTA_CUSTOM_TOWER_HIGH_FIVE = 1757,
    ACT_DOTA_ATTACK_SPECIAL = 1758,
    ACT_DOTA_TRANSITION_IDLE = 1759,
    ACT_DOTA_PIERCE_THE_VEIL = 1760,
    ACT_DOTA_RUN_RARE = 1761,
    ACT_DOTA_VIPER_DIVE = 1762,
    ACT_DOTA_VIPER_DIVE_END = 1763,
    ACT_DOTA_MK_STRIKE_END = 1764,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type MinimapEventType = DOTAMinimapEvent_t;

declare enum DOTAMinimapEvent_t {
    DOTA_MINIMAP_EVENT_ANCIENT_UNDER_ATTACK = 2,
    DOTA_MINIMAP_EVENT_BASE_UNDER_ATTACK = 4,
    DOTA_MINIMAP_EVENT_BASE_GLYPHED = 8,
    DOTA_MINIMAP_EVENT_TEAMMATE_UNDER_ATTACK = 16,
    DOTA_MINIMAP_EVENT_TEAMMATE_TELEPORTING = 32,
    DOTA_MINIMAP_EVENT_TEAMMATE_DIED = 64,
    DOTA_MINIMAP_EVENT_TUTORIAL_TASK_ACTIVE = 128,
    DOTA_MINIMAP_EVENT_TUTORIAL_TASK_FINISHED = 256,
    DOTA_MINIMAP_EVENT_HINT_LOCATION = 512,
    DOTA_MINIMAP_EVENT_ENEMY_TELEPORTING = 1024,
    DOTA_MINIMAP_EVENT_CANCEL_TELEPORTING = 2048,
    DOTA_MINIMAP_EVENT_RADAR = 4096,
    DOTA_MINIMAP_EVENT_RADAR_TARGET = 8192,
    DOTA_MINIMAP_EVENT_MOVE_TO_TARGET = 16384,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type LoadoutType = DOTASlotType_t;

declare enum DOTASlotType_t {
    DOTA_LOADOUT_TYPE_INVALID = -1,
    DOTA_LOADOUT_TYPE_WEAPON = 0,
    DOTA_LOADOUT_TYPE_OFFHAND_WEAPON = 1,
    DOTA_LOADOUT_TYPE_WEAPON2 = 2,
    DOTA_LOADOUT_TYPE_OFFHAND_WEAPON2 = 3,
    DOTA_LOADOUT_TYPE_HEAD = 4,
    DOTA_LOADOUT_TYPE_SHOULDER = 5,
    DOTA_LOADOUT_TYPE_ARMS = 6,
    DOTA_LOADOUT_TYPE_ARMOR = 7,
    DOTA_LOADOUT_TYPE_BELT = 8,
    DOTA_LOADOUT_TYPE_NECK = 9,
    DOTA_LOADOUT_TYPE_BACK = 10,
    DOTA_LOADOUT_TYPE_GLOVES = 11,
    DOTA_LOADOUT_TYPE_LEGS = 12,
    DOTA_LOADOUT_TYPE_TAIL = 13,
    DOTA_LOADOUT_TYPE_MISC = 14,
    DOTA_LOADOUT_TYPE_COSTUME = 15,
    DOTA_LOADOUT_TYPE_HERO_BASE = 16,
    DOTA_LOADOUT_TYPE_BODY_HEAD = 17,
    DOTA_LOADOUT_TYPE_MOUNT = 18,
    DOTA_LOADOUT_TYPE_SUMMON = 19,
    DOTA_LOADOUT_TYPE_SHAPESHIFT = 20,
    DOTA_LOADOUT_TYPE_TAUNT = 21,
    DOTA_LOADOUT_TYPE_AMBIENT_EFFECTS = 22,
    DOTA_LOADOUT_TYPE_ABILITY_ATTACK = 23,
    DOTA_LOADOUT_TYPE_ABILITY1 = 24,
    DOTA_LOADOUT_TYPE_ABILITY2 = 25,
    DOTA_LOADOUT_TYPE_ABILITY3 = 26,
    DOTA_LOADOUT_TYPE_ABILITY4 = 27,
    DOTA_LOADOUT_TYPE_ABILITY_ULTIMATE = 28,
    DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_1 = 29,
    DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_2 = 30,
    DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_3 = 31,
    DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_4 = 32,
    DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_5 = 33,
    DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_6 = 34,
    DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_7 = 35,
    DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_8 = 36,
    DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_9 = 37,
    DOTA_LOADOUT_TYPE_VOICE = 38,
    DOTA_LOADOUT_TYPE_WEAPON_PERSONA_1 = 39,
    DOTA_LOADOUT_TYPE_OFFHAND_WEAPON_PERSONA_1 = 40,
    DOTA_LOADOUT_TYPE_WEAPON2_PERSONA_1 = 41,
    DOTA_LOADOUT_TYPE_OFFHAND_WEAPON2_PERSONA_1 = 42,
    DOTA_LOADOUT_TYPE_HEAD_PERSONA_1 = 43,
    DOTA_LOADOUT_TYPE_SHOULDER_PERSONA_1 = 44,
    DOTA_LOADOUT_TYPE_ARMS_PERSONA_1 = 45,
    DOTA_LOADOUT_TYPE_ARMOR_PERSONA_1 = 46,
    DOTA_LOADOUT_TYPE_BELT_PERSONA_1 = 47,
    DOTA_LOADOUT_TYPE_NECK_PERSONA_1 = 48,
    DOTA_LOADOUT_TYPE_BACK_PERSONA_1 = 49,
    DOTA_LOADOUT_TYPE_LEGS_PERSONA_1 = 50,
    DOTA_LOADOUT_TYPE_GLOVES_PERSONA_1 = 51,
    DOTA_LOADOUT_TYPE_TAIL_PERSONA_1 = 52,
    DOTA_LOADOUT_TYPE_MISC_PERSONA_1 = 53,
    DOTA_LOADOUT_TYPE_BODY_HEAD_PERSONA_1 = 54,
    DOTA_LOADOUT_TYPE_MOUNT_PERSONA_1 = 55,
    DOTA_LOADOUT_TYPE_SUMMON_PERSONA_1 = 56,
    DOTA_LOADOUT_TYPE_SHAPESHIFT_PERSONA_1 = 57,
    DOTA_LOADOUT_TYPE_TAUNT_PERSONA_1 = 58,
    DOTA_LOADOUT_TYPE_AMBIENT_EFFECTS_PERSONA_1 = 59,
    DOTA_LOADOUT_TYPE_ABILITY_ATTACK_PERSONA_1 = 60,
    DOTA_LOADOUT_TYPE_ABILITY1_PERSONA_1 = 61,
    DOTA_LOADOUT_TYPE_ABILITY2_PERSONA_1 = 62,
    DOTA_LOADOUT_TYPE_ABILITY3_PERSONA_1 = 63,
    DOTA_LOADOUT_TYPE_ABILITY4_PERSONA_1 = 64,
    DOTA_LOADOUT_TYPE_ABILITY_ULTIMATE_PERSONA_1 = 65,
    DOTA_LOADOUT_TYPE_VOICE_PERSONA_1 = 66,
    DOTA_LOADOUT_PERSONA_1_START = 39,
    DOTA_LOADOUT_PERSONA_1_END = 66,
    DOTA_LOADOUT_TYPE_PERSONA_SELECTOR = 67,
    DOTA_LOADOUT_TYPE_COURIER = 68,
    DOTA_LOADOUT_TYPE_ANNOUNCER = 69,
    DOTA_LOADOUT_TYPE_MEGA_KILLS = 70,
    DOTA_LOADOUT_TYPE_MUSIC = 71,
    DOTA_LOADOUT_TYPE_WARD = 72,
    DOTA_LOADOUT_TYPE_HUD_SKIN = 73,
    DOTA_LOADOUT_TYPE_LOADING_SCREEN = 74,
    DOTA_LOADOUT_TYPE_WEATHER = 75,
    DOTA_LOADOUT_TYPE_HEROIC_STATUE = 76,
    DOTA_LOADOUT_TYPE_MULTIKILL_BANNER = 77,
    DOTA_LOADOUT_TYPE_CURSOR_PACK = 78,
    DOTA_LOADOUT_TYPE_TELEPORT_EFFECT = 79,
    DOTA_LOADOUT_TYPE_BLINK_EFFECT = 80,
    DOTA_LOADOUT_TYPE_EMBLEM = 81,
    DOTA_LOADOUT_TYPE_TERRAIN = 82,
    DOTA_LOADOUT_TYPE_RADIANT_CREEPS = 83,
    DOTA_LOADOUT_TYPE_DIRE_CREEPS = 84,
    DOTA_LOADOUT_TYPE_RADIANT_TOWER = 85,
    DOTA_LOADOUT_TYPE_DIRE_TOWER = 86,
    DOTA_LOADOUT_TYPE_VERSUS_SCREEN = 87,
    DOTA_LOADOUT_TYPE_STREAK_EFFECT = 88,
    DOTA_LOADOUT_TYPE_KILL_EFFECT = 89,
    DOTA_LOADOUT_TYPE_DEATH_EFFECT = 90,
    DOTA_LOADOUT_TYPE_HEAD_EFFECT = 91,
    DOTA_LOADOUT_TYPE_MAP_EFFECT = 92,
    DOTA_LOADOUT_TYPE_COURIER_EFFECT = 93,
    DOTA_LOADOUT_TYPE_RADIANT_SIEGE_CREEPS = 94,
    DOTA_LOADOUT_TYPE_DIRE_SIEGE_CREEPS = 95,
    DOTA_LOADOUT_TYPE_ROSHAN = 96,
    DOTA_LOADOUT_TYPE_TORMENTOR = 97,
    DOTA_LOADOUT_TYPE_ANCIENT = 98,
    DOTA_PLAYER_LOADOUT_START = 68,
    DOTA_PLAYER_LOADOUT_END = 98,
    DOTA_LOADOUT_TYPE_NONE = 99,
    DOTA_LOADOUT_TYPE_COUNT = 100,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type ModifierFunction = modifierfunction;

declare enum modifierfunction {
    /**
     * Method Name: `GetModifierPreAttack_BonusDamage`
     */ MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE = 0,
    /**
     * Method Name: `GetModifierPreAttack_BonusDamage_Target`
     */
    MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_TARGET = 1,
    /**
     * Method Name: `GetModifierPreAttack_BonusDamage_Proc`
     */
    MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_PROC = 2,
    /**
     * Method Name: `GetModifierPreAttack_BonusDamagePostCrit`
     */
    MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_POST_CRIT = 3,
    /**
     * Method Name: `GetModifierBaseAttack_BonusDamage`
     */
    MODIFIER_PROPERTY_BASEATTACK_BONUSDAMAGE = 4,
    /**
     * Method Name: `GetModifierProcAttack_BonusDamage_Physical`
     */
    MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_PHYSICAL = 5,
    /**
     * Method Name: `GetModifierProcAttack_ConvertPhysicalToMagical`
     */
    MODIFIER_PROPERTY_PROCATTACK_CONVERT_PHYSICAL_TO_MAGICAL = 6,
    /**
     * Method Name: `GetModifierProcAttack_BonusDamage_Magical`
     */
    MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_MAGICAL = 7,
    /**
     * Method Name: `GetModifierProcAttack_BonusDamage_Pure`
     */
    MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_PURE = 8,
    /**
     * Method Name: `GetModifierProcAttack_BonusDamage_Magical_Target`
     */
    MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_MAGICAL_TARGET = 9,
    /**
     * Method Name: `GetModifierProcAttack_Feedback`
     */
    MODIFIER_PROPERTY_PROCATTACK_FEEDBACK = 10,
    /**
     * Method Name: `GetModifierOverrideAttackDamage`
     */
    MODIFIER_PROPERTY_OVERRIDE_ATTACK_DAMAGE = 11,
    /**
     * Method Name: `GetModifierPreAttack`
     */
    MODIFIER_PROPERTY_PRE_ATTACK = 12,
    /**
     * Method Name: `GetModifierInvisibilityLevel`
     */
    MODIFIER_PROPERTY_INVISIBILITY_LEVEL = 13,
    /**
     * Method Name: `GetModifierInvisibilityAttackBehaviorException`
     */
    MODIFIER_PROPERTY_INVISIBILITY_ATTACK_BEHAVIOR_EXCEPTION = 14,
    /**
     * Method Name: `GetModifierPersistentInvisibility`
     */
    MODIFIER_PROPERTY_PERSISTENT_INVISIBILITY = 15,
    /**
     * Method Name: `GetModifierMoveSpeedBonus_Constant`
     */
    MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT = 16,
    /**
     * Method Name: `GetModifierMoveSpeedOverride`
     */
    MODIFIER_PROPERTY_MOVESPEED_BASE_OVERRIDE = 17,
    /**
     * Method Name: `GetModifierMoveSpeedBonus_Percentage`
     */
    MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE = 18,
    /**
     * Method Name: `GetModifierMoveSpeedBonus_Percentage_Unique`
     */
    MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE_UNIQUE = 19,
    /**
     * Method Name: `GetModifierMoveSpeedBonus_Special_Boots`
     */
    MODIFIER_PROPERTY_MOVESPEED_BONUS_UNIQUE = 20,
    /**
     * Method Name: `GetModifierMoveSpeedBonus_Special_Boots_2`
     */
    MODIFIER_PROPERTY_MOVESPEED_BONUS_UNIQUE_2 = 21,
    /**
     * Method Name: `GetModifierMoveSpeedBonus_Constant_Unique`
     */
    MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT_UNIQUE = 22,
    /**
     * Method Name: `GetModifierMoveSpeedBonus_Constant_Unique_2`
     */
    MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT_UNIQUE_2 = 23,
    /**
     * Method Name: `GetModifierMoveSpeed_Absolute`
     */
    MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE = 24,
    /**
     * Method Name: `GetModifierMoveSpeed_AbsoluteMin`
     */
    MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE_MIN = 25,
    /**
     * Method Name: `GetModifierMoveSpeed_AbsoluteMax`
     */
    MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE_MAX = 26,
    /**
     * Method Name: `GetModifierIgnoreMovespeedLimit`
     */
    MODIFIER_PROPERTY_IGNORE_MOVESPEED_LIMIT = 27,
    /**
     * Method Name: `GetModifierMoveSpeed_Limit`
     */
    MODIFIER_PROPERTY_MOVESPEED_LIMIT = 28,
    /**
     * Method Name: `GetModifierAttackSpeedBaseOverride`
     */
    MODIFIER_PROPERTY_ATTACKSPEED_BASE_OVERRIDE = 29,
    /**
     * Method Name: `GetModifierFixedAttackRate`
     */
    MODIFIER_PROPERTY_FIXED_ATTACK_RATE = 30,
    /**
     * Method Name: `GetModifierAttackSpeedBonus_Constant`
     */
    MODIFIER_PROPERTY_ATTACKSPEED_BONUS_CONSTANT = 31,
    /**
     * Method Name: `GetModifierAttackSpeed_Limit`
     */
    MODIFIER_PROPERTY_IGNORE_ATTACKSPEED_LIMIT = 32,
    /**
     * Method Name: `GetModifierCooldownReduction_Constant`
     */
    MODIFIER_PROPERTY_COOLDOWN_REDUCTION_CONSTANT = 33,
    /**
     * Method Name: `GetModifierManacostReduction_Constant`
     */
    MODIFIER_PROPERTY_MANACOST_REDUCTION_CONSTANT = 34,
    /**
     * Method Name: `GetModifierHealthcostReduction_Constant`
     */
    MODIFIER_PROPERTY_HEALTHCOST_REDUCTION_CONSTANT = 35,
    /**
     * Method Name: `GetModifierBaseAttackTimeConstant`
     */
    MODIFIER_PROPERTY_BASE_ATTACK_TIME_CONSTANT = 36,
    /**
     * Method Name: `GetModifierBaseAttackTimeConstant_Adjust`
     */
    MODIFIER_PROPERTY_BASE_ATTACK_TIME_CONSTANT_ADJUST = 37,
    /**
     * Method Name: `GetModifierBaseAttackTimePercentage`
     */
    MODIFIER_PROPERTY_BASE_ATTACK_TIME_PERCENTAGE = 38,
    /**
     * Method Name: `GetModifierAttackPointConstant`
     */
    MODIFIER_PROPERTY_ATTACK_POINT_CONSTANT = 39,
    /**
     * Method Name: `GetModifierBonusDamageOutgoing_Percentage`
     */
    MODIFIER_PROPERTY_BONUSDAMAGEOUTGOING_PERCENTAGE = 40,
    /**
     * Method Name: `GetModifierDamageOutgoing_Percentage`
     */
    MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE = 41,
    /**
     * Method Name: `GetModifierDamageOutgoing_Percentage_Illusion`
     */
    MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE_ILLUSION = 42,
    /**
     * Method Name: `GetModifierDamageOutgoing_Percentage_Illusion_Amplify`
     */
    MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE_ILLUSION_AMPLIFY = 43,
    /**
     * Method Name: `GetModifierTotalDamageOutgoing_Percentage`
     */
    MODIFIER_PROPERTY_TOTALDAMAGEOUTGOING_PERCENTAGE = 44,
    /**
     * Method Name: `GetModifierSpellAmplify_PercentageCreep`
     */
    MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE_CREEP = 45,
    /**
     * Method Name: `GetModifierSpellAmplify_Percentage`
     */
    MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE = 46,
    /**
     * Method Name: `GetModifierSpellAmplify_PercentageUnique`
     */
    MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE_UNIQUE = 47,
    /**
     * Method Name: `GetModifierSpellAmplify_PercentageTarget`
     */
    MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE_TARGET = 48,
    /**
     * Method Name: `GetModifierHealAmplify_PercentageSource`
     */
    MODIFIER_PROPERTY_HEAL_AMPLIFY_PERCENTAGE_SOURCE = 49,
    /**
     * Method Name: `GetModifierHealAmplify_PercentageTarget`
     */
    MODIFIER_PROPERTY_HEAL_AMPLIFY_PERCENTAGE_TARGET = 50,
    /**
     * Method Name: `GetModifierHPRegen_CanBeNegative`
     */
    MODIFIER_PROPERTY_HP_REGEN_CAN_BE_NEGATIVE = 51,
    /**
     * Method Name: `GetModifierHPRegenAmplify_Percentage`
     */
    MODIFIER_PROPERTY_HP_REGEN_AMPLIFY_PERCENTAGE = 52,
    /**
     * Method Name: `GetModifierLifestealRegenAmplify_Percentage`
     */
    MODIFIER_PROPERTY_LIFESTEAL_AMPLIFY_PERCENTAGE = 53,
    /**
     * Method Name: `GetModifierSpellLifestealRegenAmplify_Percentage`
     */
    MODIFIER_PROPERTY_SPELL_LIFESTEAL_AMPLIFY_PERCENTAGE = 54,
    /**
     * Method Name: `GetModifierMPRegenAmplify_Percentage`
     */
    MODIFIER_PROPERTY_MP_REGEN_AMPLIFY_PERCENTAGE = 55,
    /**
     * Method Name: `GetModifierManaDrainAmplify_Percentage`
     */
    MODIFIER_PROPERTY_MANA_DRAIN_AMPLIFY_PERCENTAGE = 56,
    /**
     * Total amplify value is clamped to 0.
     *
     *
     *
     * Method Name: `GetModifierMPRestoreAmplify_Percentage`.
     */
    MODIFIER_PROPERTY_MP_RESTORE_AMPLIFY_PERCENTAGE = 57,
    /**
     * Method Name: `GetModifierBaseDamageOutgoing_Percentage`
     */
    MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE = 58,
    /**
     * Method Name: `GetModifierBaseDamageOutgoing_PercentageUnique`
     */
    MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE_UNIQUE = 59,
    /**
     * Method Name: `GetModifierIncomingDamage_Percentage`
     */
    MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE = 60,
    /**
     * Method Name: `GetModifierIncomingPhysicalDamage_Percentage`
     */
    MODIFIER_PROPERTY_INCOMING_PHYSICAL_DAMAGE_PERCENTAGE = 61,
    /**
     * This property controls 'physical' shield, if defined both on client and server.
     * Return value on client should be current shield health, as a positive integer,
     * on server - amount of damage blocked.
     *
     *
     *
     * Method Name: `GetModifierIncomingPhysicalDamageConstant`.
     */
    MODIFIER_PROPERTY_INCOMING_PHYSICAL_DAMAGE_CONSTANT = 62,
    /**
     * This property controls 'spell' shield, if defined both on client and server.
     * Return value on client should be current shield health, as a positive integer,
     * on server - amount of damage blocked.
     *
     *
     *
     * Method Name: `GetModifierIncomingSpellDamageConstant`.
     */
    MODIFIER_PROPERTY_INCOMING_SPELL_DAMAGE_CONSTANT = 63,
    /**
     * Method Name: `GetModifierEvasion_Constant`
     */
    MODIFIER_PROPERTY_EVASION_CONSTANT = 64,
    /**
     * Method Name: `GetModifierNegativeEvasion_Constant`
     */
    MODIFIER_PROPERTY_NEGATIVE_EVASION_CONSTANT = 65,
    /**
     * Method Name: `GetModifierStatusResistance`
     */
    MODIFIER_PROPERTY_STATUS_RESISTANCE = 66,
    /**
     * Method Name: `GetModifierStatusResistanceStacking`
     */
    MODIFIER_PROPERTY_STATUS_RESISTANCE_STACKING = 67,
    /**
     * Method Name: `GetModifierStatusResistanceCaster`
     */
    MODIFIER_PROPERTY_STATUS_RESISTANCE_CASTER = 68,
    /**
     * Method Name: `GetModifierAvoidDamage`
     */
    MODIFIER_PROPERTY_AVOID_DAMAGE = 69,
    /**
     * Method Name: `GetModifierAvoidSpell`
     */
    MODIFIER_PROPERTY_AVOID_SPELL = 70,
    /**
     * Method Name: `GetModifierMiss_Percentage`
     */
    MODIFIER_PROPERTY_MISS_PERCENTAGE = 71,
    /**
     * Values above 100% are ignored.
     *
     *
     *
     * Method Name: `GetModifierPhysicalArmorBase_Percentage`.
     */
    MODIFIER_PROPERTY_PHYSICAL_ARMOR_BASE_PERCENTAGE = 72,
    /**
     * Method Name: `GetModifierPhysicalArmorTotal_Percentage`
     */
    MODIFIER_PROPERTY_PHYSICAL_ARMOR_TOTAL_PERCENTAGE = 73,
    /**
     * Method Name: `GetModifierPhysicalArmorBonus`
     */
    MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS = 74,
    /**
     * Method Name: `GetModifierPhysicalArmorBonusUnique`
     */
    MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_UNIQUE = 75,
    /**
     * Method Name: `GetModifierPhysicalArmorBonusUniqueActive`
     */
    MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_UNIQUE_ACTIVE = 76,
    /**
     * Method Name: `GetModifierPhysicalArmorBonusPost`
     */
    MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_POST = 77,
    /**
     * Method Name: `GetModifierMinPhysicalArmor`
     */
    MODIFIER_PROPERTY_MIN_PHYSICAL_ARMOR = 78,
    /**
     * Method Name: `GetModifierIgnorePhysicalArmor`
     */
    MODIFIER_PROPERTY_IGNORE_PHYSICAL_ARMOR = 79,
    /**
     * Method Name: `GetModifierMagicalResistanceBaseReduction`
     */
    MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BASE_REDUCTION = 80,
    /**
     * Method Name: `GetModifierMagicalResistanceDirectModification`
     */
    MODIFIER_PROPERTY_MAGICAL_RESISTANCE_DIRECT_MODIFICATION = 81,
    /**
     * Method Name: `GetModifierMagicalResistanceBonus`
     */
    MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS = 82,
    /**
     * Method Name: `GetModifierMagicalResistanceBonusIllusions`
     */
    MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS_ILLUSIONS = 83,
    /**
     * Method Name: `GetModifierMagicalResistanceBonusUnique`
     */
    MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS_UNIQUE = 84,
    /**
     * Method Name: `GetModifierMagicalResistanceDecrepifyUnique`
     */
    MODIFIER_PROPERTY_MAGICAL_RESISTANCE_DECREPIFY_UNIQUE = 85,
    /**
     * Method Name: `GetModifierBaseRegen`
     */
    MODIFIER_PROPERTY_BASE_MANA_REGEN = 86,
    /**
     * Method Name: `GetModifierConstantManaRegen`
     */
    MODIFIER_PROPERTY_MANA_REGEN_CONSTANT = 87,
    /**
     * Method Name: `GetModifierConstantManaRegenUnique`
     */
    MODIFIER_PROPERTY_MANA_REGEN_CONSTANT_UNIQUE = 88,
    /**
     * Method Name: `GetModifierTotalPercentageManaRegen`
     */
    MODIFIER_PROPERTY_MANA_REGEN_TOTAL_PERCENTAGE = 89,
    /**
     * Method Name: `GetModifierConstantHealthRegen`
     */
    MODIFIER_PROPERTY_HEALTH_REGEN_CONSTANT = 90,
    /**
     * Method Name: `GetModifierHealthRegenPercentage`
     */
    MODIFIER_PROPERTY_HEALTH_REGEN_PERCENTAGE = 91,
    /**
     * Method Name: `GetModifierHealthRegenPercentageUnique`
     */
    MODIFIER_PROPERTY_HEALTH_REGEN_PERCENTAGE_UNIQUE = 92,
    /**
     * Method Name: `GetModifierHealthBonus`
     */
    MODIFIER_PROPERTY_HEALTH_BONUS = 93,
    /**
     * Method Name: `GetModifierManaBonus`
     */
    MODIFIER_PROPERTY_MANA_BONUS = 94,
    /**
     * Method Name: `GetModifierExtraStrengthBonus`
     */
    MODIFIER_PROPERTY_EXTRA_STRENGTH_BONUS = 95,
    /**
     * Method Name: `GetModifierExtraHealthBonus`
     */
    MODIFIER_PROPERTY_EXTRA_HEALTH_BONUS = 96,
    /**
     * Method Name: `GetModifierExtraManaBonus`
     */
    MODIFIER_PROPERTY_EXTRA_MANA_BONUS = 97,
    /**
     * Method Name: `GetModifierExtraManaBonusPercentage`
     */
    MODIFIER_PROPERTY_EXTRA_MANA_BONUS_PERCENTAGE = 98,
    /**
     * Method Name: `GetModifierExtraHealthPercentage`
     */
    MODIFIER_PROPERTY_EXTRA_HEALTH_PERCENTAGE = 99,
    /**
     * Method Name: `GetModifierExtraManaPercentage`
     */
    MODIFIER_PROPERTY_EXTRA_MANA_PERCENTAGE = 100,
    /**
     * Method Name: `GetModifierBonusStats_Strength`
     */
    MODIFIER_PROPERTY_STATS_STRENGTH_BONUS = 101,
    /**
     * Method Name: `GetModifierBonusStats_Agility`
     */
    MODIFIER_PROPERTY_STATS_AGILITY_BONUS = 102,
    /**
     * Method Name: `GetModifierBonusStats_Intellect`
     */
    MODIFIER_PROPERTY_STATS_INTELLECT_BONUS = 103,
    /**
     * Method Name: `GetModifierBonusStats_Strength_Percentage`
     */
    MODIFIER_PROPERTY_STATS_STRENGTH_BONUS_PERCENTAGE = 104,
    /**
     * Method Name: `GetModifierBonusStats_Agility_Percentage`
     */
    MODIFIER_PROPERTY_STATS_AGILITY_BONUS_PERCENTAGE = 105,
    /**
     * Method Name: `GetModifierBonusStats_Intellect_Percentage`
     */
    MODIFIER_PROPERTY_STATS_INTELLECT_BONUS_PERCENTAGE = 106,
    /**
     * Method Name: `GetModifierCastRangeBonus`
     */
    MODIFIER_PROPERTY_CAST_RANGE_BONUS = 107,
    /**
     * Method Name: `GetModifierCastRangeBonusPercentage`
     */
    MODIFIER_PROPERTY_CAST_RANGE_BONUS_PERCENTAGE = 108,
    /**
     * Method Name: `GetModifierCastRangeBonusTarget`
     */
    MODIFIER_PROPERTY_CAST_RANGE_BONUS_TARGET = 109,
    /**
     * Method Name: `GetModifierCastRangeBonusStacking`
     */
    MODIFIER_PROPERTY_CAST_RANGE_BONUS_STACKING = 110,
    /**
     * Method Name: `GetModifierAttackRangeOverride`
     */
    MODIFIER_PROPERTY_ATTACK_RANGE_BASE_OVERRIDE = 111,
    /**
     * Method Name: `GetModifierAttackRangeBonus`
     */
    MODIFIER_PROPERTY_ATTACK_RANGE_BONUS = 112,
    /**
     * Method Name: `GetModifierAttackRangeBonusUnique`
     */
    MODIFIER_PROPERTY_ATTACK_RANGE_BONUS_UNIQUE = 113,
    /**
     * Method Name: `GetModifierAttackRangeBonusPercentage`
     */
    MODIFIER_PROPERTY_ATTACK_RANGE_BONUS_PERCENTAGE = 114,
    /**
     * Method Name: `GetModifierMaxAttackRange`
     */
    MODIFIER_PROPERTY_MAX_ATTACK_RANGE = 115,
    /**
     * Method Name: `GetModifierProjectileSpeedBonus`
     */
    MODIFIER_PROPERTY_PROJECTILE_SPEED_BONUS = 116,
    /**
     * Method Name: `GetModifierProjectileSpeedBonusPercentage`
     */
    MODIFIER_PROPERTY_PROJECTILE_SPEED_BONUS_PERCENTAGE = 117,
    /**
     * Method Name: `GetModifierProjectileName`
     */
    MODIFIER_PROPERTY_PROJECTILE_NAME = 118,
    /**
     * Method Name: `ReincarnateTime`
     */
    MODIFIER_PROPERTY_REINCARNATION = 119,
    /**
     * Method Name: `ReincarnateSuppressFX`
     */
    MODIFIER_PROPERTY_REINCARNATION_SUPPRESS_FX = 120,
    /**
     * Method Name: `GetModifierConstantRespawnTime`
     */
    MODIFIER_PROPERTY_RESPAWNTIME = 121,
    /**
     * Method Name: `GetModifierPercentageRespawnTime`
     */
    MODIFIER_PROPERTY_RESPAWNTIME_PERCENTAGE = 122,
    /**
     * Method Name: `GetModifierStackingRespawnTime`
     */
    MODIFIER_PROPERTY_RESPAWNTIME_STACKING = 123,
    /**
     * Method Name: `GetModifierPercentageCooldown`
     */
    MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE = 124,
    /**
     * Method Name: `GetModifierPercentageCooldownOngoing`
     */
    MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE_ONGOING = 125,
    /**
     * Method Name: `GetModifierPercentageCasttime`
     */
    MODIFIER_PROPERTY_CASTTIME_PERCENTAGE = 126,
    /**
     * Method Name: `GetModifierPercentageAttackAnimTime`
     */
    MODIFIER_PROPERTY_ATTACK_ANIM_TIME_PERCENTAGE = 127,
    /**
     * Method Name: `GetModifierPercentageManacost`
     */
    MODIFIER_PROPERTY_MANACOST_PERCENTAGE = 128,
    /**
     * Method Name: `GetModifierPercentageManacostStacking`
     */
    MODIFIER_PROPERTY_MANACOST_PERCENTAGE_STACKING = 129,
    /**
     * Method Name: `GetModifierPercentageHealthcost`
     */
    MODIFIER_PROPERTY_HEALTHCOST_PERCENTAGE = 130,
    /**
     * Method Name: `GetModifierPercentageHealthcostStacking`
     */
    MODIFIER_PROPERTY_HEALTHCOST_PERCENTAGE_STACKING = 131,
    /**
     * Method Name: `GetModifierConstantDeathGoldCost`
     */
    MODIFIER_PROPERTY_DEATHGOLDCOST = 132,
    /**
     * Method Name: `GetModifierPercentageDeathGoldCost`
     */
    MODIFIER_PROPERTY_PERCENTAGE_DEATHGOLDCOST = 133,
    /**
     * Method Name: `GetModifierPercentageExpRateBoost`
     */
    MODIFIER_PROPERTY_EXP_RATE_BOOST = 134,
    /**
     * Method Name: `GetModifierPercentageGoldRateBoost`
     */
    MODIFIER_PROPERTY_GOLD_RATE_BOOST = 135,
    /**
     * Method Name: `GetModifierPreAttack_CriticalStrike`
     */
    MODIFIER_PROPERTY_PREATTACK_CRITICALSTRIKE = 136,
    /**
     * Method Name: `GetModifierPreAttack_Target_CriticalStrike`
     */
    MODIFIER_PROPERTY_PREATTACK_TARGET_CRITICALSTRIKE = 137,
    /**
     * Method Name: `GetModifierMagical_ConstantBlock`
     */
    MODIFIER_PROPERTY_MAGICAL_CONSTANT_BLOCK = 138,
    /**
     * Method Name: `GetModifierPhysical_ConstantBlock`
     */
    MODIFIER_PROPERTY_PHYSICAL_CONSTANT_BLOCK = 139,
    /**
     * Method Name: `GetModifierPhysical_ConstantBlockSpecial`
     */
    MODIFIER_PROPERTY_PHYSICAL_CONSTANT_BLOCK_SPECIAL = 140,
    /**
     * Method Name: `GetModifierInnateDamageBlockPctOverride`
     */
    MODIFIER_PROPERTY_INNATE_DAMAGE_BLOCK_PCT_OVERRIDE = 141,
    /**
     * Method Name: `GetModifierPhysical_ConstantBlockUnavoidablePreArmor`
     */
    MODIFIER_PROPERTY_TOTAL_CONSTANT_BLOCK_UNAVOIDABLE_PRE_ARMOR = 142,
    /**
     * Method Name: `GetModifierTotal_ConstantBlock`
     */
    MODIFIER_PROPERTY_TOTAL_CONSTANT_BLOCK = 143,
    /**
     * Method Name: `GetOverrideAnimation`
     */
    MODIFIER_PROPERTY_OVERRIDE_ANIMATION = 144,
    /**
     * Method Name: `GetOverrideAnimationRate`
     */
    MODIFIER_PROPERTY_OVERRIDE_ANIMATION_RATE = 145,
    /**
     * Method Name: `GetAbsorbSpell`
     */
    MODIFIER_PROPERTY_ABSORB_SPELL = 146,
    /**
     * Method Name: `GetReflectSpell`
     */
    MODIFIER_PROPERTY_REFLECT_SPELL = 147,
    /**
     * Method Name: `GetDisableAutoAttack`
     */
    MODIFIER_PROPERTY_DISABLE_AUTOATTACK = 148,
    /**
     * Method Name: `GetBonusDayVision`
     */
    MODIFIER_PROPERTY_BONUS_DAY_VISION = 149,
    /**
     * Method Name: `GetBonusDayVisionPercentage`
     */
    MODIFIER_PROPERTY_BONUS_DAY_VISION_PERCENTAGE = 150,
    /**
     * Method Name: `GetBonusNightVision`
     */
    MODIFIER_PROPERTY_BONUS_NIGHT_VISION = 151,
    /**
     * Method Name: `GetBonusNightVisionUnique`
     */
    MODIFIER_PROPERTY_BONUS_NIGHT_VISION_UNIQUE = 152,
    /**
     * Method Name: `GetBonusVisionPercentage`
     */
    MODIFIER_PROPERTY_BONUS_VISION_PERCENTAGE = 153,
    /**
     * Method Name: `GetFixedDayVision`
     */
    MODIFIER_PROPERTY_FIXED_DAY_VISION = 154,
    /**
     * Method Name: `GetFixedNightVision`
     */
    MODIFIER_PROPERTY_FIXED_NIGHT_VISION = 155,
    /**
     * Method Name: `GetMinHealth`
     */
    MODIFIER_PROPERTY_MIN_HEALTH = 156,
    /**
     * Method Name: `GetAbsoluteNoDamagePhysical`
     */
    MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PHYSICAL = 157,
    /**
     * Method Name: `GetAbsoluteNoDamageMagical`
     */
    MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_MAGICAL = 158,
    /**
     * Method Name: `GetAbsoluteNoDamagePure`
     */
    MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PURE = 159,
    /**
     * Method Name: `GetIsIllusion`
     */
    MODIFIER_PROPERTY_IS_ILLUSION = 160,
    /**
     * Method Name: `GetModifierIllusionLabel`
     */
    MODIFIER_PROPERTY_ILLUSION_LABEL = 161,
    /**
     * Method Name: `GetModifierStrongIllusion`
     */
    MODIFIER_PROPERTY_STRONG_ILLUSION = 162,
    /**
     * Method Name: `GetModifierSuperIllusion`
     */
    MODIFIER_PROPERTY_SUPER_ILLUSION = 163,
    /**
     * Method Name: `GetModifierSuperIllusionWithUltimate`
     */
    MODIFIER_PROPERTY_SUPER_ILLUSION_WITH_ULTIMATE = 164,
    /**
     * Method Name: `GetModifierXPDuringDeath`
     */
    MODIFIER_PROPERTY_XP_DURING_DEATH = 165,
    /**
     * Method Name: `GetModifierTurnRate_Percentage`
     */
    MODIFIER_PROPERTY_TURN_RATE_PERCENTAGE = 166,
    /**
     * Method Name: `GetModifierTurnRate_Override`
     */
    MODIFIER_PROPERTY_TURN_RATE_OVERRIDE = 167,
    /**
     * Method Name: `GetDisableHealing`
     */
    MODIFIER_PROPERTY_DISABLE_HEALING = 168,
    /**
     * Method Name: `GetDisableManaGain`
     */
    MODIFIER_PROPERTY_DISABLE_MANA_GAIN = 169,
    /**
     * Method Name: `GetAlwaysAllowAttack`
     */
    MODIFIER_PROPERTY_ALWAYS_ALLOW_ATTACK = 170,
    /**
     * Method Name: `GetAllowEtherealAttack`
     */
    MODIFIER_PROPERTY_ALWAYS_ETHEREAL_ATTACK = 171,
    /**
     * Method Name: `GetOverrideAttackMagical`
     */
    MODIFIER_PROPERTY_OVERRIDE_ATTACK_MAGICAL = 172,
    /**
     * Method Name: `GetModifierUnitStatsNeedsRefresh`
     */
    MODIFIER_PROPERTY_UNIT_STATS_NEEDS_REFRESH = 173,
    MODIFIER_PROPERTY_BOUNTY_CREEP_MULTIPLIER = 174,
    MODIFIER_PROPERTY_BOUNTY_OTHER_MULTIPLIER = 175,
    /**
     * Method Name: `GetModifierUnitDisllowUpgrading`
     */
    MODIFIER_PROPERTY_UNIT_DISALLOW_UPGRADING = 176,
    /**
     * Method Name: `GetModifierDodgeProjectile`
     */
    MODIFIER_PROPERTY_DODGE_PROJECTILE = 177,
    /**
     * Method Name: `GetTriggerCosmeticAndEndAttack`
     */
    MODIFIER_PROPERTY_TRIGGER_COSMETIC_AND_END_ATTACK = 178,
    /**
     * Method Name: `GetModifierMaxDebuffDuration`
     */
    MODIFIER_PROPERTY_MAX_DEBUFF_DURATION = 179,
    /**
     * Method Name: `GetPrimaryStatDamageMultiplier`
     */
    MODIFIER_PROPERTY_PRIMARY_STAT_DAMAGE_MULTIPLIER = 180,
    /**
     * Method Name: `GetModifierPreAttack_DeadlyBlow`
     */
    MODIFIER_PROPERTY_PREATTACK_DEADLY_BLOW = 181,
    /**
     * Method Name: `GetAlwaysAutoAttackWhileHoldPosition`
     */
    MODIFIER_PROPERTY_ALWAYS_AUTOATTACK_WHILE_HOLD_POSITION = 182,
    /**
     * Method Name: `GetPhysicalArmorPiercingPercentageTarget`
     */
    MODIFIER_PROPERTY_PHYSICAL_ARMOR_PIERCING_PERCENTAGE_TARGET = 183,
    /**
     * Method Name: `GetMagicalArmorPiercingPercentageTarget`
     */
    MODIFIER_PROPERTY_MAGICAL_ARMOR_PIERCING_PERCENTAGE_TARGET = 184,
    /**
     * Method Name: `OnSpellTargetReady`
     */
    MODIFIER_EVENT_ON_SPELL_TARGET_READY = 185,
    /**
     * Method Name: `OnAttackRecord`
     */
    MODIFIER_EVENT_ON_ATTACK_RECORD = 186,
    /**
     * Method Name: `OnAttackStart`
     */
    MODIFIER_EVENT_ON_ATTACK_START = 187,
    /**
     * Method Name: `OnAttack`
     */
    MODIFIER_EVENT_ON_ATTACK = 188,
    /**
     * Method Name: `OnAttackLanded`
     */
    MODIFIER_EVENT_ON_ATTACK_LANDED = 189,
    /**
     * Method Name: `OnAttackFail`
     */
    MODIFIER_EVENT_ON_ATTACK_FAIL = 190,
    /**
     * Happens even if attack can't be issued.
     *
     *
     *
     * Method Name: `OnAttackAllied`.
     */
    MODIFIER_EVENT_ON_ATTACK_ALLIED = 191,
    /**
     * Method Name: `OnProjectileDodge`
     */
    MODIFIER_EVENT_ON_PROJECTILE_DODGE = 192,
    /**
     * Method Name: `OnOrder`
     */
    MODIFIER_EVENT_ON_ORDER = 193,
    /**
     * Method Name: `OnUnitMoved`
     */
    MODIFIER_EVENT_ON_UNIT_MOVED = 194,
    /**
     * Method Name: `OnAbilityStart`
     */
    MODIFIER_EVENT_ON_ABILITY_START = 195,
    /**
     * Method Name: `OnAbilityExecuted`
     */
    MODIFIER_EVENT_ON_ABILITY_EXECUTED = 196,
    /**
     * Method Name: `OnAbilityFullyCast`
     */
    MODIFIER_EVENT_ON_ABILITY_FULLY_CAST = 197,
    /**
     * Method Name: `OnBreakInvisibility`
     */
    MODIFIER_EVENT_ON_BREAK_INVISIBILITY = 198,
    /**
     * Method Name: `OnAbilityEndChannel`
     */
    MODIFIER_EVENT_ON_ABILITY_END_CHANNEL = 199,
    MODIFIER_EVENT_ON_PROCESS_UPGRADE = 200,
    MODIFIER_EVENT_ON_REFRESH = 201,
    /**
     * Method Name: `OnTakeDamage`
     */
    MODIFIER_EVENT_ON_TAKEDAMAGE = 202,
    /**
     * Method Name: `OnDamagePrevented`
     */
    MODIFIER_EVENT_ON_DEATH_PREVENTED = 203,
    /**
     * Method Name: `OnStateChanged`
     */
    MODIFIER_EVENT_ON_STATE_CHANGED = 204,
    MODIFIER_EVENT_ON_ORB_EFFECT = 205,
    /**
     * Method Name: `OnProcessCleave`
     */
    MODIFIER_EVENT_ON_PROCESS_CLEAVE = 206,
    /**
     * Method Name: `OnDamageCalculated`
     */
    MODIFIER_EVENT_ON_DAMAGE_CALCULATED = 207,
    /**
     * Method Name: `OnMagicDamageCalculated`
     */
    MODIFIER_EVENT_ON_MAGIC_DAMAGE_CALCULATED = 208,
    /**
     * Method Name: `OnAttacked`
     */
    MODIFIER_EVENT_ON_ATTACKED = 209,
    /**
     * Method Name: `OnDeath`
     */
    MODIFIER_EVENT_ON_DEATH = 210,
    /**
     * Method Name: `OnDeathCompleted`
     */
    MODIFIER_EVENT_ON_DEATH_COMPLETED = 211,
    /**
     * Method Name: `OnRespawn`
     */
    MODIFIER_EVENT_ON_RESPAWN = 212,
    /**
     * Method Name: `OnSpentMana`
     */
    MODIFIER_EVENT_ON_SPENT_MANA = 213,
    /**
     * Method Name: `OnSpentHealth`
     */
    MODIFIER_EVENT_ON_SPENT_HEALTH = 214,
    /**
     * Method Name: `OnTeleporting`
     */
    MODIFIER_EVENT_ON_TELEPORTING = 215,
    /**
     * Method Name: `OnTeleported`
     */
    MODIFIER_EVENT_ON_TELEPORTED = 216,
    /**
     * Method Name: `OnSetLocation`
     */
    MODIFIER_EVENT_ON_SET_LOCATION = 217,
    /**
     * Method Name: `OnHealthGained`
     */
    MODIFIER_EVENT_ON_HEALTH_GAINED = 218,
    /**
     * Method Name: `OnManaGained`
     */
    MODIFIER_EVENT_ON_MANA_GAINED = 219,
    /**
     * Method Name: `OnTakeDamageKillCredit`
     */
    MODIFIER_EVENT_ON_TAKEDAMAGE_KILLCREDIT = 220,
    /**
     * Method Name: `OnHeroKilled`
     */
    MODIFIER_EVENT_ON_HERO_KILLED = 221,
    /**
     * Method Name: `OnHealReceived`
     */
    MODIFIER_EVENT_ON_HEAL_RECEIVED = 222,
    /**
     * Method Name: `OnBuildingKilled`
     */
    MODIFIER_EVENT_ON_BUILDING_KILLED = 223,
    /**
     * Method Name: `OnModelChanged`
     */
    MODIFIER_EVENT_ON_MODEL_CHANGED = 224,
    /**
     * Method Name: `OnModifierAdded`
     */
    MODIFIER_EVENT_ON_MODIFIER_ADDED = 225,
    /**
     * Method Name: `OnModifierRemoved`
     */
    MODIFIER_EVENT_ON_MODIFIER_REMOVED = 226,
    /**
     * Method Name: `OnTooltip`
     */
    MODIFIER_PROPERTY_TOOLTIP = 227,
    /**
     * Method Name: `GetModifierModelChange`
     */
    MODIFIER_PROPERTY_MODEL_CHANGE = 228,
    /**
     * Method Name: `GetModifierModelScale`
     */
    MODIFIER_PROPERTY_MODEL_SCALE = 229,
    /**
     * Method Name: `GetModifierModelScaleAnimateTime`
     */
    MODIFIER_PROPERTY_MODEL_SCALE_ANIMATE_TIME = 230,
    /**
     * Method Name: `GetModifierModelScaleUseInOutEase`
     */
    MODIFIER_PROPERTY_MODEL_SCALE_USE_IN_OUT_EASE = 231,
    /**
     * Method Name: `GetModifierModelScaleConstant`
     */
    MODIFIER_PROPERTY_MODEL_SCALE_CONSTANT = 232,
    /**
     * Applies scepter when this property is active
     *
     *
     *
     * Method Name: `GetModifierScepter`.
     */
    MODIFIER_PROPERTY_IS_SCEPTER = 233,
    /**
     * Applies shard when this property is active
     *
     *
     *
     * Method Name: `GetModifierShard`.
     */
    MODIFIER_PROPERTY_IS_SHARD = 234,
    /**
     * Method Name: `GetModifierRadarCooldownReduction`
     */
    MODIFIER_PROPERTY_RADAR_COOLDOWN_REDUCTION = 235,
    /**
     * Method Name: `GetActivityTranslationModifiers`
     */
    MODIFIER_PROPERTY_TRANSLATE_ACTIVITY_MODIFIERS = 236,
    /**
     * Method Name: `GetAttackSound`
     */
    MODIFIER_PROPERTY_TRANSLATE_ATTACK_SOUND = 237,
    /**
     * Method Name: `GetUnitLifetimeFraction`
     */
    MODIFIER_PROPERTY_LIFETIME_FRACTION = 238,
    /**
     * Method Name: `GetModifierProvidesFOWVision`
     */
    MODIFIER_PROPERTY_PROVIDES_FOW_POSITION = 239,
    /**
     * Method Name: `GetModifierSpellsRequireHP`
     */
    MODIFIER_PROPERTY_SPELLS_REQUIRE_HP = 240,
    /**
     * Method Name: `GetModifierConvertManaCostToHealthCost`
     */
    MODIFIER_PROPERTY_CONVERT_MANA_COST_TO_HEALTH_COST = 241,
    /**
     * Method Name: `GetForceDrawOnMinimap`
     */
    MODIFIER_PROPERTY_FORCE_DRAW_MINIMAP = 242,
    /**
     * Method Name: `GetModifierDisableTurning`
     */
    MODIFIER_PROPERTY_DISABLE_TURNING = 243,
    /**
     * Method Name: `GetModifierIgnoreCastAngle`
     */
    MODIFIER_PROPERTY_IGNORE_CAST_ANGLE = 244,
    /**
     * Method Name: `GetModifierChangeAbilityValue`
     */
    MODIFIER_PROPERTY_CHANGE_ABILITY_VALUE = 245,
    /**
     * Method Name: `GetModifierOverrideAbilitySpecial`
     */
    MODIFIER_PROPERTY_OVERRIDE_ABILITY_SPECIAL = 246,
    /**
     * Method Name: `GetModifierOverrideAbilitySpecialValue`
     */
    MODIFIER_PROPERTY_OVERRIDE_ABILITY_SPECIAL_VALUE = 247,
    /**
     * Method Name: `GetModifierAbilityLayout`
     */
    MODIFIER_PROPERTY_ABILITY_LAYOUT = 248,
    /**
     * Method Name: `OnDominated`
     */
    MODIFIER_EVENT_ON_DOMINATED = 249,
    /**
     * Method Name: `OnKill`
     */
    MODIFIER_EVENT_ON_KILL = 250,
    /**
     * Method Name: `OnAssist`
     */
    MODIFIER_EVENT_ON_ASSIST = 251,
    /**
     * Method Name: `GetModifierTempestDouble`
     */
    MODIFIER_PROPERTY_TEMPEST_DOUBLE = 252,
    /**
     * Method Name: `PreserveParticlesOnModelChanged`
     */
    MODIFIER_PROPERTY_PRESERVE_PARTICLES_ON_MODEL_CHANGE = 253,
    /**
     * Method Name: `OnAttackFinished`
     */
    MODIFIER_EVENT_ON_ATTACK_FINISHED = 254,
    /**
     * Method Name: `GetModifierIgnoreCooldown`
     */
    MODIFIER_PROPERTY_IGNORE_COOLDOWN = 255,
    /**
     * Method Name: `GetModifierCanAttackTrees`
     */
    MODIFIER_PROPERTY_CAN_ATTACK_TREES = 256,
    /**
     * Method Name: `GetVisualZDelta`
     */
    MODIFIER_PROPERTY_VISUAL_Z_DELTA = 257,
    /**
     * Method Name: `GetVisualZSpeedBaseOverride`
     */
    MODIFIER_PROPERTY_VISUAL_Z_SPEED_BASE_OVERRIDE = 258,
    MODIFIER_PROPERTY_INCOMING_DAMAGE_ILLUSION = 259,
    /**
     * Method Name: `GetModifierNoVisionOfAttacker`
     */
    MODIFIER_PROPERTY_DONT_GIVE_VISION_OF_ATTACKER = 260,
    /**
     * Method Name: `OnTooltip2`
     */
    MODIFIER_PROPERTY_TOOLTIP2 = 261,
    /**
     * Method Name: `OnAttackRecordDestroy`
     */
    MODIFIER_EVENT_ON_ATTACK_RECORD_DESTROY = 262,
    /**
     * Method Name: `OnProjectileObstructionHit`
     */
    MODIFIER_EVENT_ON_PROJECTILE_OBSTRUCTION_HIT = 263,
    /**
     * Method Name: `GetSuppressTeleport`
     */
    MODIFIER_PROPERTY_SUPPRESS_TELEPORT = 264,
    /**
     * Method Name: `OnAttackCancelled`
     */
    MODIFIER_EVENT_ON_ATTACK_CANCELLED = 265,
    /**
     * Method Name: `GetSuppressCleave`
     */
    MODIFIER_PROPERTY_SUPPRESS_CLEAVE = 266,
    /**
     * Method Name: `BotAttackScoreBonus`
     */
    MODIFIER_PROPERTY_BOT_ATTACK_SCORE_BONUS = 267,
    /**
     * Method Name: `GetModifierAttackSpeedReductionPercentage`
     */
    MODIFIER_PROPERTY_ATTACKSPEED_REDUCTION_PERCENTAGE = 268,
    /**
     * Method Name: `GetModifierMoveSpeedReductionPercentage`
     */
    MODIFIER_PROPERTY_MOVESPEED_REDUCTION_PERCENTAGE = 269,
    MODIFIER_PROPERTY_ATTACK_WHILE_MOVING_TARGET = 270,
    /**
     * Method Name: `GetModifierAttackSpeedPercentage`
     */
    MODIFIER_PROPERTY_ATTACKSPEED_PERCENTAGE = 271,
    /**
     * Method Name: `OnAttemptProjectileDodge`
     */
    MODIFIER_EVENT_ON_ATTEMPT_PROJECTILE_DODGE = 272,
    /**
     * Method Name: `OnPreDebuffApplied`
     */
    MODIFIER_EVENT_ON_PREDEBUFF_APPLIED = 273,
    /**
     * Method Name: `GetModifierPercentageCooldownStacking`
     */
    MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE_STACKING = 274,
    /**
     * Method Name: `GetModifierSpellRedirectTarget`
     */
    MODIFIER_PROPERTY_SPELL_REDIRECT_TARGET = 275,
    /**
     * Method Name: `GetModifierTurnRateConstant`
     */
    MODIFIER_PROPERTY_TURN_RATE_CONSTANT = 276,
    /**
     * Method Name: `GetModifierIsPackRat`
     */
    MODIFIER_PROPERTY_PACK_RAT = 277,
    /**
     * Method Name: `GetModifierPhysicalDamageOutgoing_Percentage`
     */
    MODIFIER_PROPERTY_PHYSICALDAMAGEOUTGOING_PERCENTAGE = 278,
    /**
     * Method Name: `GetModifierKnockbackAmplification_Percentage`
     */
    MODIFIER_PROPERTY_KNOCKBACK_AMPLIFICATION_PERCENTAGE = 279,
    /**
     * Return value is a count of pips.
     *
     *
     *
     * Method Name: `GetModifierHealthBarPips`.
     */
    MODIFIER_PROPERTY_HEALTHBAR_PIPS = 280,
    /**
     * This property controls 'universal' shield, if defined both on client and
     * server. Return value on client should be current shield health, as a positive
     * integer, on server - amount of damage blocked.
     *
     *
     *
     * Method Name: `GetModifierIncomingDamageConstant`.
     */
    MODIFIER_PROPERTY_INCOMING_DAMAGE_CONSTANT = 281,
    /**
     * Method Name: `OnSpellAppliedSuccessfully`
     */
    MODIFIER_EVENT_SPELL_APPLIED_SUCCESSFULLY = 282,
    /**
     * Method Name: `GetModifierAvoidDamageAfterReductions`
     */
    MODIFIER_PROPERTY_AVOID_DAMAGE_AFTER_REDUCTIONS = 283,
    /**
     * Method Name: `GetModifierPropetyFailAttack`
     */
    MODIFIER_PROPERTY_FAIL_ATTACK = 284,
    /**
     * Method Name: `GetModifierPrereduceIncomingDamage_Mult`
     */
    MODIFIER_PROPERTY_PREREDUCE_INCOMING_DAMAGE_MULT = 285,
    /**
     * Method Name: `GetModifierSuppressFullscreenDeathFX`
     */
    MODIFIER_PROPERTY_SUPPRESS_FULLSCREEN_DEATH_FX = 286,
    /**
     * Method Name: `MODIFIER_PROPERTY_INCOMING_DAMAGE_CONSTANT_POST`
     */
    MODIFIER_PROPERTY_INCOMING_DAMAGE_CONSTANT_POST = 287,
    /**
     * Method Name: `GetModifierDamageOutgoing_PercentageMultiplicative`
     */
    MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE_MULTIPLICATIVE = 288,
    /**
     * Method Name: `GetModifierTickGold_Multiplier`
     */
    MODIFIER_PROPERTY_TICK_GOLD_MULTIPLIER = 289,
    /**
     * Method Name: `GEtModifierSlowResistance_Unique`
     */
    MODIFIER_PROPERTY_SLOW_RESISTANCE_UNIQUE = 290,
    /**
     * Method Name: `GetModifierSlowResistance_Stacking`
     */
    MODIFIER_PROPERTY_SLOW_RESISTANCE_STACKING = 291,
    /**
     * Method Name: `GetModifierAoEBonusPercentage`
     */
    MODIFIER_PROPERTY_AOE_BONUS_PERCENTAGE = 292,
    /**
     * Method Name: `GetModifierProjectileSpeed`
     */
    MODIFIER_PROPERTY_PROJECTILE_SPEED = 293,
    /**
     * Method Name: `GetModifierProjectileSpeedTarget`
     */
    MODIFIER_PROPERTY_PROJECTILE_SPEED_TARGET = 294,
    /**
     * Method Name: `GetModifierBecomeStrength`
     */
    MODIFIER_PROPERTY_BECOME_STRENGTH = 295,
    /**
     * Method Name: `GetModifierBecomeAgility`
     */
    MODIFIER_PROPERTY_BECOME_AGILITY = 296,
    /**
     * Method Name: `GetModifierBecomeIntelligence`
     */
    MODIFIER_PROPERTY_BECOME_INTELLIGENCE = 297,
    /**
     * Method Name: `GetModifierBecomeUniversal`
     */
    MODIFIER_PROPERTY_BECOME_UNIVERSAL = 298,
    /**
     * Method Name: `OnForceProcMagicStick`
     */
    MODIFIER_EVENT_ON_FORCE_PROC_MAGIC_STICK = 299,
    /**
     * Method Name: `OnDamageHPLoss`
     */
    MODIFIER_EVENT_ON_DAMAGE_HPLOSS = 300,
    /**
     * Method Name: `GetModifierShareXPRune`
     */
    MODIFIER_PROPERTY_SHARE_XPRUNE = 301,
    /**
     * Method Name: `GetModifierNoFreeTPScrollOnDeath`
     */
    MODIFIER_PROPERTY_NO_FREE_TP_SCROLL_ON_DEATH = 302,
    /**
     * Method Name: `GetModifierHasBonusNeutralItemChoice`
     */
    MODIFIER_PROPERTY_HAS_BONUS_NEUTRAL_ITEM_CHOICE = 303,
    /**
     * Method Name: `GetModifierForceMaxHealth`
     */
    MODIFIER_PROPERTY_FORCE_MAX_HEALTH = 304,
    /**
     * Method Name: `GetModifierForceMaxMana`
     */
    MODIFIER_PROPERTY_FORCE_MAX_MANA = 305,
    /**
     * Method Name: `GetModifierAoEBonusConstant`
     */
    MODIFIER_PROPERTY_AOE_BONUS_CONSTANT = 306,
    /**
     * Method Name: `GetModifierAoEBonusConstantStacking`
     */
    MODIFIER_PROPERTY_AOE_BONUS_CONSTANT_STACKING = 307,
    /**
     * Method Name: `OnTakeDamagePostUnavoidableBlock`
     */
    MODIFIER_EVENT_ON_TAKEDAMAGE_POST_UNAVOIDABLE_BLOCK = 308,
    /**
     * Method Name: `OnMuteDamageAbilities`
     */
    MODIFIER_EVENT_ON_MUTE_DAMAGE_ABILITIES = 309,
    /**
     * Method Name: `GetSuppressCrit`
     */
    MODIFIER_PROPERTY_SUPPRESS_CRIT = 310,
    /**
     * Method Name: `GetModifierAbilityPoints`
     */
    MODIFIER_PROPERTY_ABILITY_POINTS = 311,
    /**
     * Method Name: `GetModifierBuybackPenaltyPercent`
     */
    MODIFIER_PROPERTY_BUYBACK_PENALTY_PERCENT = 312,
    /**
     * Method Name: `GetModifierItemSellbackCost`
     */
    MODIFIER_PROPERTY_ITEM_SELLBACK_COST = 313,
    /**
     * Method Name: `GetModifierDisassembleAnything`
     */
    MODIFIER_PROPERTY_DISASSEMBLE_ANYTHING = 314,
    /**
     * Method Name: `GetModifierFixedManaRegen`
     */
    MODIFIER_PROPERTY_FIXED_MANA_REGEN = 315,
    /**
     * Method Name: `GetModifierBonusUphillMissChance`
     */
    MODIFIER_PROPERTY_BONUS_UPHILL_MISS_CHANCE = 316,
    /**
     * Method Name: `GetModifierCreepDenyPercent`
     */
    MODIFIER_PROPERTY_CREEP_DENY_PERCENT = 317,
    /**
     * Method Name: `GetModifierAttackSpeedAbsoluteMax`
     */
    MODIFIER_PROPERTY_ATTACKSPEED_ABSOLUTE_MAX = 318,
    /**
     * Method Name: `GetModifierFoWTeam`
     */
    MODIFIER_PROPERTY_FOW_TEAM = 319,
    /**
     * Method Name: `OnHeroBeginDying`
     */
    MODIFIER_EVENT_ON_HERO_BEGIN_DYING = 320,
    /**
     * Method Name: `GetModifierBonusLotusHeal`
     */
    MODIFIER_PROPERTY_BONUS_LOTUS_HEAL = 321,
    /**
     * Method Name: `GetModifierBonusLotusHeal`
     */
    MODIFIER_PROPERTY_BASE_HP_REGEN_PER_STR_BONUS_PERCENTAGE = 322,
    /**
     * Method Name: `GetModifierBonusLotusHeal`
     */
    MODIFIER_PROPERTY_BASE_ARMOR_PER_AGI_BONUS_PERCENTAGE = 323,
    /**
     * Method Name: `GetModifierBonusLotusHeal`
     */
    MODIFIER_PROPERTY_BASE_MP_REGEN_PER_INT_BONUS_PERCENTAGE = 324,
    /**
     * Method Name: `GetModifierBonusLotusHeal`
     */
    MODIFIER_PROPERTY_BASE_MRES_PER_INT_BONUS_PERCENTAGE = 325,
    /**
     * Method Name: `OnDayStarted`
     */
    MODIFIER_EVENT_ON_DAY_STARTED = 326,
    /**
     * Method Name: `GetModifierCreateBonusIllusionChance`
     */
    MODIFIER_PROPERTY_CREATE_BONUS_ILLUSION_CHANCE = 327,
    /**
     * Method Name: `GetModifierCreateBonusIllusionCount`
     */
    MODIFIER_PROPERTY_CREATE_BONUS_ILLUSION_COUNT = 328,
    /**
     * Method Name: `GetModofierPropertyPseudoRandomBonus`
     */
    MODIFIER_PROPERTY_PSEUDORANDOM_BONUS = 329,
    /**
     * Method Name: `GetModifierAttackHeightBonus`
     */
    MODIFIER_PROPERTY_ATTACK_HEIGHT_BONUS = 330,
    /**
     * Method Name: `GetSkipAttackRegulator`
     */
    MODIFIER_PROPERTY_SKIP_ATTACK_REGULATOR = 331,
    /**
     * Method Name: `GetModifierMiss_Percentage_Target`
     */
    MODIFIER_PROPERTY_MISS_PERCENTAGE_TARGET = 332,
    /**
     * Method Name: `GetModifierAdditionalNutralItemDrops`
     */
    MODIFIER_PROPERTY_ADDITIONAL_NEUTRAL_ITEM_DROPS = 333,
    /**
     * Method Name: `GetModifierKillStreakBonusGoldPercentage`
     */
    MODIFIER_PROPERTY_KILL_STREAK_BONUS_GOLD_PERCENTAGE = 334,
    /**
     * Method Name: `GetModifierHPRegenMultiplierPreAmplification`
     */
    MODIFIER_PROPERTY_HP_REGEN_MULTIPLIER_PRE_AMPLIFICATION = 335,
    /**
     * Method Name: `GetModifierHeroFacetOverride`
     */
    MODIFIER_PROPERTY_HEROFACET_OVERRIDE = 336,
    /**
     * Method Name: `OnTreeCutDown`
     */
    MODIFIER_EVENT_ON_TREE_CUT_DOWN = 337,
    /**
     * Method Name: `OnCleaveAttackLanded`
     */
    MODIFIER_EVENT_ON_CLEAVE_ATTACK_LANDED = 338,
    /**
     * Method Name: `MinAttributeLevel`
     */
    MODIFIER_PROPERTY_MIN_ATTRIBUTE_LEVEL = 339,
    /**
     * Method Name: `GetTierTokenReroll`
     */
    MODIFIER_PROPERTY_TIER_TOKEN_REROLL = 340,
    /**
     * Method Name: `GetVisionDegreeRestriction`
     */
    MODIFIER_PROPERTY_VISION_DEGREES_RESTRICTION = 341,
    /**
     * Method Name: `GetModifierTotal_ConstantBlockStacking`
     */
    MODIFIER_PROPERTY_TOTAL_CONSTANT_BLOCK_STACKING = 342,
    /**
     * Method Name: `GetModifierInventorySlotRestricted`
     */
    MODIFIER_PROPERTY_INVENTORY_SLOT_RESTRICTED = 343,
    /**
     * Method Name: `OnTierTokenRerolled`
     */
    MODIFIER_EVENT_ON_TIER_TOKEN_REROLLED = 344,
    /**
     * Method Name: `GetRedirectSpell`
     */
    MODIFIER_PROPERTY_REDIRECT_SPELL = 345,
    /**
     * Method Name: `GetBaseAttackPostBonus`
     */
    MODIFIER_PROPERTY_BASEATTACK_POSTBONUS = 346,
    MODIFIER_FUNCTION_LAST = 347,
    MODIFIER_FUNCTION_INVALID = 65535,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type ModifierState = modifierstate;

declare enum modifierstate {
    MODIFIER_STATE_ROOTED = 0,
    MODIFIER_STATE_DISARMED = 1,
    MODIFIER_STATE_ATTACK_IMMUNE = 2,
    MODIFIER_STATE_SILENCED = 3,
    MODIFIER_STATE_MUTED = 4,
    MODIFIER_STATE_STUNNED = 5,
    MODIFIER_STATE_HEXED = 6,
    MODIFIER_STATE_INVISIBLE = 7,
    MODIFIER_STATE_INVULNERABLE = 8,
    MODIFIER_STATE_MAGIC_IMMUNE = 9,
    MODIFIER_STATE_PROVIDES_VISION = 10,
    MODIFIER_STATE_NIGHTMARED = 11,
    MODIFIER_STATE_BLOCK_DISABLED = 12,
    MODIFIER_STATE_EVADE_DISABLED = 13,
    MODIFIER_STATE_UNSELECTABLE = 14,
    MODIFIER_STATE_CANNOT_TARGET_ENEMIES = 15,
    MODIFIER_STATE_CANNOT_TARGET_BUILDINGS = 16,
    MODIFIER_STATE_CANNOT_MISS = 17,
    MODIFIER_STATE_SPECIALLY_DENIABLE = 18,
    MODIFIER_STATE_FROZEN = 19,
    MODIFIER_STATE_COMMAND_RESTRICTED = 20,
    MODIFIER_STATE_NOT_ON_MINIMAP = 21,
    MODIFIER_STATE_LOW_ATTACK_PRIORITY = 22,
    MODIFIER_STATE_NO_HEALTH_BAR = 23,
    MODIFIER_STATE_NO_HEALTH_BAR_FOR_ENEMIES = 24,
    MODIFIER_STATE_NO_HEALTH_BAR_FOR_OTHER_PLAYERS = 25,
    MODIFIER_STATE_FLYING = 26,
    MODIFIER_STATE_NO_UNIT_COLLISION = 27,
    MODIFIER_STATE_NO_TEAM_MOVE_TO = 28,
    MODIFIER_STATE_NO_TEAM_SELECT = 29,
    MODIFIER_STATE_PASSIVES_DISABLED = 30,
    MODIFIER_STATE_DOMINATED = 31,
    MODIFIER_STATE_BLIND = 32,
    MODIFIER_STATE_OUT_OF_GAME = 33,
    MODIFIER_STATE_FAKE_ALLY = 34,
    MODIFIER_STATE_FLYING_FOR_PATHING_PURPOSES_ONLY = 35,
    MODIFIER_STATE_TRUESIGHT_IMMUNE = 36,
    MODIFIER_STATE_UNTARGETABLE = 37,
    MODIFIER_STATE_UNTARGETABLE_ALLIED = 38,
    MODIFIER_STATE_UNTARGETABLE_ENEMY = 39,
    MODIFIER_STATE_UNTARGETABLE_SELF = 40,
    MODIFIER_STATE_IGNORING_MOVE_AND_ATTACK_ORDERS = 41,
    MODIFIER_STATE_ALLOW_PATHING_THROUGH_TREES = 42,
    MODIFIER_STATE_NOT_ON_MINIMAP_FOR_ENEMIES = 43,
    MODIFIER_STATE_UNSLOWABLE = 44,
    MODIFIER_STATE_TETHERED = 45,
    MODIFIER_STATE_IGNORING_STOP_ORDERS = 46,
    MODIFIER_STATE_FEARED = 47,
    MODIFIER_STATE_TAUNTED = 48,
    MODIFIER_STATE_CANNOT_BE_MOTION_CONTROLLED = 49,
    MODIFIER_STATE_FORCED_FLYING_VISION = 50,
    MODIFIER_STATE_ATTACK_ALLIES = 51,
    MODIFIER_STATE_ALLOW_PATHING_THROUGH_CLIFFS = 52,
    MODIFIER_STATE_ALLOW_PATHING_THROUGH_FISSURE = 53,
    MODIFIER_STATE_SPECIALLY_UNDENIABLE = 54,
    MODIFIER_STATE_ALLOW_PATHING_THROUGH_OBSTRUCTIONS = 55,
    MODIFIER_STATE_DEBUFF_IMMUNE = 56,
    MODIFIER_STATE_NO_INVISIBILITY_VISUALS = 57,
    MODIFIER_STATE_ALLOW_PATHING_THROUGH_BASE_BLOCKER = 58,
    MODIFIER_STATE_IGNORING_MOVE_ORDERS = 59,
    MODIFIER_STATE_ATTACKS_ARE_MELEE = 60,
    MODIFIER_STATE_CAN_USE_BACKPACK_ITEMS = 61,
    MODIFIER_STATE_CASTS_IGNORE_CHANNELING = 62,
    MODIFIER_STATE_ATTACKS_DONT_REVEAL = 63,
    MODIFIER_STATE_LAST = 64,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type ModifierAttribute = DOTAModifierAttribute_t;

declare enum DOTAModifierAttribute_t {
    MODIFIER_ATTRIBUTE_NONE = 0,
    MODIFIER_ATTRIBUTE_PERMANENT = 1,
    MODIFIER_ATTRIBUTE_MULTIPLE = 2,
    MODIFIER_ATTRIBUTE_IGNORE_INVULNERABLE = 4,
    MODIFIER_ATTRIBUTE_AURA_PRIORITY = 8,
    MODIFIER_ATTRIBUTE_IGNORE_DODGE = 16,
}

declare enum Attributes {
    DOTA_ATTRIBUTE_STRENGTH = 0,
    DOTA_ATTRIBUTE_AGILITY = 1,
    DOTA_ATTRIBUTE_INTELLECT = 2,
    DOTA_ATTRIBUTE_ALL = 3,
    DOTA_ATTRIBUTE_MAX = 4,
    DOTA_ATTRIBUTE_INVALID = -1,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type ParticleAttachment = ParticleAttachment_t;

declare enum ParticleAttachment_t {
    PATTACH_INVALID = -1,
    PATTACH_ABSORIGIN = 0,
    PATTACH_ABSORIGIN_FOLLOW = 1,
    PATTACH_CUSTOMORIGIN = 2,
    PATTACH_CUSTOMORIGIN_FOLLOW = 3,
    PATTACH_POINT = 4,
    PATTACH_POINT_FOLLOW = 5,
    PATTACH_EYES_FOLLOW = 6,
    PATTACH_OVERHEAD_FOLLOW = 7,
    PATTACH_WORLDORIGIN = 8,
    PATTACH_ROOTBONE_FOLLOW = 9,
    PATTACH_RENDERORIGIN_FOLLOW = 10,
    PATTACH_MAIN_VIEW = 11,
    PATTACH_WATERWAKE = 12,
    PATTACH_CENTER_FOLLOW = 13,
    PATTACH_CUSTOM_GAME_STATE_1 = 14,
    PATTACH_HEALTHBAR = 15,
    MAX_PATTACH_TYPES = 16,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type MotionControllerPriority = DOTA_MOTION_CONTROLLER_PRIORITY;

declare enum DOTA_MOTION_CONTROLLER_PRIORITY {
    DOTA_MOTION_CONTROLLER_PRIORITY_LOWEST = 0,
    DOTA_MOTION_CONTROLLER_PRIORITY_LOW = 1,
    DOTA_MOTION_CONTROLLER_PRIORITY_MEDIUM = 2,
    DOTA_MOTION_CONTROLLER_PRIORITY_HIGH = 3,
    DOTA_MOTION_CONTROLLER_PRIORITY_HIGHEST = 4,
    DOTA_MOTION_CONTROLLER_PRIORITY_ULTRA = 5,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type SpeechType = DOTASpeechType_t;

declare enum DOTASpeechType_t {
    DOTA_SPEECH_USER_INVALID = 0,
    DOTA_SPEECH_USER_SINGLE = 1,
    DOTA_SPEECH_USER_TEAM = 2,
    DOTA_SPEECH_USER_TEAM_NEARBY = 3,
    DOTA_SPEECH_USER_NEARBY = 4,
    DOTA_SPEECH_USER_ALL = 5,
    DOTA_SPEECH_GOOD_TEAM = 6,
    DOTA_SPEECH_BAD_TEAM = 7,
    DOTA_SPEECH_SPECTATOR = 8,
    DOTA_SPEECH_USER_TEAM_NOSPECTATOR = 9,
    DOTA_SPEECH_RECIPIENT_TYPE_MAX = 10,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type AbilitySpeakTrigger = DOTAAbilitySpeakTrigger_t;

declare enum DOTAAbilitySpeakTrigger_t {
    DOTA_ABILITY_SPEAK_START_ACTION_PHASE = 0,
    DOTA_ABILITY_SPEAK_CAST = 1,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type CustomUiType = DotaCustomUIType_t;

declare enum DotaCustomUIType_t {
    DOTA_CUSTOM_UI_TYPE_HUD = 0,
    DOTA_CUSTOM_UI_TYPE_HERO_SELECTION = 1,
    DOTA_CUSTOM_UI_TYPE_PREGAME_STRATEGY = 2,
    DOTA_CUSTOM_UI_TYPE_GAME_INFO = 3,
    DOTA_CUSTOM_UI_TYPE_GAME_SETUP = 4,
    DOTA_CUSTOM_UI_TYPE_FLYOUT_SCOREBOARD = 5,
    DOTA_CUSTOM_UI_TYPE_HUD_TOP_BAR = 6,
    DOTA_CUSTOM_UI_TYPE_END_SCREEN = 7,
    DOTA_CUSTOM_UI_TYPE_COUNT = 8,
    DOTA_CUSTOM_UI_TYPE_INVALID = -1,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type DefaultUiElement = DotaDefaultUIElement_t;

declare enum DotaDefaultUIElement_t {
    DOTA_DEFAULT_UI_INVALID = -1,
    DOTA_DEFAULT_UI_TOP_TIMEOFDAY = 0,
    DOTA_DEFAULT_UI_TOP_HEROES = 1,
    DOTA_DEFAULT_UI_FLYOUT_SCOREBOARD = 2,
    DOTA_DEFAULT_UI_ACTION_PANEL = 3,
    DOTA_DEFAULT_UI_ACTION_MINIMAP = 4,
    DOTA_DEFAULT_UI_INVENTORY_PANEL = 5,
    DOTA_DEFAULT_UI_INVENTORY_SHOP = 6,
    DOTA_DEFAULT_UI_INVENTORY_ITEMS = 7,
    DOTA_DEFAULT_UI_INVENTORY_QUICKBUY = 8,
    DOTA_DEFAULT_UI_INVENTORY_COURIER = 9,
    DOTA_DEFAULT_UI_INVENTORY_PROTECT = 10,
    DOTA_DEFAULT_UI_INVENTORY_GOLD = 11,
    DOTA_DEFAULT_UI_SHOP_SUGGESTEDITEMS = 12,
    DOTA_DEFAULT_UI_SHOP_COMMONITEMS = 13,
    DOTA_DEFAULT_UI_HERO_SELECTION_TEAMS = 14,
    DOTA_DEFAULT_UI_HERO_SELECTION_GAME_NAME = 15,
    DOTA_DEFAULT_UI_HERO_SELECTION_CLOCK = 16,
    DOTA_DEFAULT_UI_HERO_SELECTION_HEADER = 17,
    DOTA_DEFAULT_UI_TOP_MENU_BUTTONS = 18,
    DOTA_DEFAULT_UI_TOP_BAR_BACKGROUND = 19,
    DOTA_DEFAULT_UI_TOP_BAR_RADIANT_TEAM = 20,
    DOTA_DEFAULT_UI_TOP_BAR_DIRE_TEAM = 21,
    DOTA_DEFAULT_UI_TOP_BAR_SCORE = 22,
    DOTA_DEFAULT_UI_ENDGAME = 23,
    DOTA_DEFAULT_UI_ENDGAME_CHAT = 24,
    DOTA_DEFAULT_UI_QUICK_STATS = 25,
    DOTA_DEFAULT_UI_PREGAME_STRATEGYUI = 26,
    DOTA_DEFAULT_UI_KILLCAM = 27,
    DOTA_DEFAULT_UI_FIGHT_RECAP = 28,
    DOTA_DEFAULT_UI_TOP_BAR = 29,
    DOTA_DEFAULT_UI_CUSTOMUI_BEHIND_HUD_ELEMENTS = 30,
    DOTA_DEFAULT_UI_AGHANIMS_STATUS = 31,
    DOTA_DEFAULT_UI_ELEMENT_COUNT = 32,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type PlayerUltimateStateOrTime = PlayerUltimateStateOrTime_t;

declare enum PlayerUltimateStateOrTime_t {
    PLAYER_ULTIMATE_STATE_READY = 0,
    PLAYER_ULTIMATE_STATE_NO_MANA = -1,
    PLAYER_ULTIMATE_STATE_NOT_LEVELED = -2,
    PLAYER_ULTIMATE_STATE_HIDDEN = -3,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type PlayerOrderIssuer = PlayerOrderIssuer_t;

declare enum PlayerOrderIssuer_t {
    DOTA_ORDER_ISSUER_SELECTED_UNITS = 0,
    DOTA_ORDER_ISSUER_CURRENT_UNIT_ONLY = 1,
    DOTA_ORDER_ISSUER_HERO_ONLY = 2,
    DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY = 3,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type OrderQueueBehavior = OrderQueueBehavior_t;

declare enum OrderQueueBehavior_t {
    DOTA_ORDER_QUEUE_DEFAULT = 0,
    DOTA_ORDER_QUEUE_NEVER = 1,
    DOTA_ORDER_QUEUE_ALWAYS = 2,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type ClickBehaviors = CLICK_BEHAVIORS;

declare enum CLICK_BEHAVIORS {
    DOTA_CLICK_BEHAVIOR_NONE = 0,
    DOTA_CLICK_BEHAVIOR_MOVE = 1,
    DOTA_CLICK_BEHAVIOR_ATTACK = 2,
    DOTA_CLICK_BEHAVIOR_CAST = 3,
    DOTA_CLICK_BEHAVIOR_DROP_ITEM = 4,
    DOTA_CLICK_BEHAVIOR_DROP_SHOP_ITEM = 5,
    DOTA_CLICK_BEHAVIOR_DRAG = 6,
    DOTA_CLICK_BEHAVIOR_LEARN_ABILITY = 7,
    DOTA_CLICK_BEHAVIOR_PATROL = 8,
    DOTA_CLICK_BEHAVIOR_VECTOR_CAST = 9,
    DOTA_CLICK_BEHAVIOR_UNUSED = 10,
    DOTA_CLICK_BEHAVIOR_RADAR = 11,
    DOTA_CLICK_BEHAVIOR_LAST = 12,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type AbilityLearnResult = AbilityLearnResult_t;

declare enum AbilityLearnResult_t {
    ABILITY_CAN_BE_UPGRADED = 0,
    ABILITY_CANNOT_BE_UPGRADED_NOT_UPGRADABLE = 1,
    ABILITY_CANNOT_BE_UPGRADED_AT_MAX = 2,
    ABILITY_CANNOT_BE_UPGRADED_REQUIRES_LEVEL = 3,
    ABILITY_NOT_LEARNABLE = 4,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type KeybindCommand = DOTAKeybindCommand_t;

declare enum DOTAKeybindCommand_t {
    DOTA_KEYBIND_NONE = 0,
    DOTA_KEYBIND_FIRST = 1,
    DOTA_KEYBIND_CAMERA_UP = 1,
    DOTA_KEYBIND_CAMERA_DOWN = 2,
    DOTA_KEYBIND_CAMERA_LEFT = 3,
    DOTA_KEYBIND_CAMERA_RIGHT = 4,
    DOTA_KEYBIND_CAMERA_GRIP = 5,
    DOTA_KEYBIND_CAMERA_YAW_GRIP = 6,
    DOTA_KEYBIND_CAMERA_SAVED_POSITION_1 = 7,
    DOTA_KEYBIND_CAMERA_SAVED_POSITION_2 = 8,
    DOTA_KEYBIND_CAMERA_SAVED_POSITION_3 = 9,
    DOTA_KEYBIND_CAMERA_SAVED_POSITION_4 = 10,
    DOTA_KEYBIND_CAMERA_SAVED_POSITION_5 = 11,
    DOTA_KEYBIND_CAMERA_SAVED_POSITION_6 = 12,
    DOTA_KEYBIND_CAMERA_SAVED_POSITION_7 = 13,
    DOTA_KEYBIND_CAMERA_SAVED_POSITION_8 = 14,
    DOTA_KEYBIND_CAMERA_SAVED_POSITION_9 = 15,
    DOTA_KEYBIND_CAMERA_SAVED_POSITION_10 = 16,
    DOTA_KEYBIND_HERO_ATTACK = 17,
    DOTA_KEYBIND_HERO_MOVE = 18,
    DOTA_KEYBIND_HERO_MOVE_DIRECTION = 19,
    DOTA_KEYBIND_PATROL = 20,
    DOTA_KEYBIND_HERO_STOP = 21,
    DOTA_KEYBIND_HERO_HOLD = 22,
    DOTA_KEYBIND_HERO_SELECT = 23,
    DOTA_KEYBIND_COURIER_SELECT = 24,
    DOTA_KEYBIND_COURIER_DELIVER = 25,
    DOTA_KEYBIND_COURIER_BURST = 26,
    DOTA_KEYBIND_COURIER_SHIELD = 27,
    DOTA_KEYBIND_PAUSE = 28,
    DOTA_SELECT_ALL = 29,
    DOTA_SELECT_ALL_OTHERS = 30,
    DOTA_RECENT_EVENT = 31,
    DOTA_KEYBIND_CHAT_TEAM = 32,
    DOTA_KEYBIND_CHAT_GLOBAL = 33,
    DOTA_KEYBIND_CHAT_TEAM2 = 34,
    DOTA_KEYBIND_CHAT_GLOBAL2 = 35,
    DOTA_KEYBIND_CHAT_VOICE_PARTY = 36,
    DOTA_KEYBIND_CHAT_VOICE_TEAM = 37,
    DOTA_KEYBIND_CHAT_WHEEL = 38,
    DOTA_KEYBIND_CHAT_WHEEL2 = 39,
    DOTA_KEYBIND_CHAT_WHEEL_CARE = 40,
    DOTA_KEYBIND_CHAT_WHEEL_BACK = 41,
    DOTA_KEYBIND_CHAT_WHEEL_NEED_WARDS = 42,
    DOTA_KEYBIND_CHAT_WHEEL_STUN = 43,
    DOTA_KEYBIND_CHAT_WHEEL_HELP = 44,
    DOTA_KEYBIND_CHAT_WHEEL_GET_PUSH = 45,
    DOTA_KEYBIND_CHAT_WHEEL_GOOD_JOB = 46,
    DOTA_KEYBIND_CHAT_WHEEL_MISSING = 47,
    DOTA_KEYBIND_CHAT_WHEEL_MISSING_TOP = 48,
    DOTA_KEYBIND_CHAT_WHEEL_MISSING_MIDDLE = 49,
    DOTA_KEYBIND_CHAT_WHEEL_MISSING_BOTTOM = 50,
    DOTA_KEYBIND_HERO_CHAT_WHEEL = 51,
    DOTA_KEYBIND_SPRAY_WHEEL = 52,
    DOTA_KEYBIND_ABILITY_PRIMARY1 = 53,
    DOTA_KEYBIND_ABILITY_PRIMARY2 = 54,
    DOTA_KEYBIND_ABILITY_PRIMARY3 = 55,
    DOTA_KEYBIND_ABILITY_SECONDARY1 = 56,
    DOTA_KEYBIND_ABILITY_SECONDARY2 = 57,
    DOTA_KEYBIND_ABILITY_ULTIMATE = 58,
    DOTA_KEYBIND_TALENT_UPGRADE_LEFT = 59,
    DOTA_KEYBIND_TALENT_UPGRADE_RIGHT = 60,
    DOTA_KEYBIND_TALENT_UPGRADE_ATTRIBUTE = 61,
    DOTA_KEYBIND_ABILITY_PRIMARY1_QUICKCAST = 62,
    DOTA_KEYBIND_ABILITY_PRIMARY2_QUICKCAST = 63,
    DOTA_KEYBIND_ABILITY_PRIMARY3_QUICKCAST = 64,
    DOTA_KEYBIND_ABILITY_SECONDARY1_QUICKCAST = 65,
    DOTA_KEYBIND_ABILITY_SECONDARY2_QUICKCAST = 66,
    DOTA_KEYBIND_ABILITY_ULTIMATE_QUICKCAST = 67,
    DOTA_KEYBIND_ABILITY_PRIMARY1_EXPLICIT_AUTOCAST = 68,
    DOTA_KEYBIND_ABILITY_PRIMARY2_EXPLICIT_AUTOCAST = 69,
    DOTA_KEYBIND_ABILITY_PRIMARY3_EXPLICIT_AUTOCAST = 70,
    DOTA_KEYBIND_ABILITY_SECONDARY1_EXPLICIT_AUTOCAST = 71,
    DOTA_KEYBIND_ABILITY_SECONDARY2_EXPLICIT_AUTOCAST = 72,
    DOTA_KEYBIND_ABILITY_ULTIMATE_EXPLICIT_AUTOCAST = 73,
    DOTA_KEYBIND_ABILITY_PRIMARY1_QUICKCAST_AUTOCAST = 74,
    DOTA_KEYBIND_ABILITY_PRIMARY2_QUICKCAST_AUTOCAST = 75,
    DOTA_KEYBIND_ABILITY_PRIMARY3_QUICKCAST_AUTOCAST = 76,
    DOTA_KEYBIND_ABILITY_SECONDARY1_QUICKCAST_AUTOCAST = 77,
    DOTA_KEYBIND_ABILITY_SECONDARY2_QUICKCAST_AUTOCAST = 78,
    DOTA_KEYBIND_ABILITY_ULTIMATE_QUICKCAST_AUTOCAST = 79,
    DOTA_KEYBIND_ABILITY_PRIMARY1_AUTOMATIC_AUTOCAST = 80,
    DOTA_KEYBIND_ABILITY_PRIMARY2_AUTOMATIC_AUTOCAST = 81,
    DOTA_KEYBIND_ABILITY_PRIMARY3_AUTOMATIC_AUTOCAST = 82,
    DOTA_KEYBIND_ABILITY_SECONDARY1_AUTOMATIC_AUTOCAST = 83,
    DOTA_KEYBIND_ABILITY_SECONDARY2_AUTOMATIC_AUTOCAST = 84,
    DOTA_KEYBIND_ABILITY_ULTIMATE_AUTOMATIC_AUTOCAST = 85,
    DOTA_KEYBIND_INVENTORY1 = 86,
    DOTA_KEYBIND_INVENTORY2 = 87,
    DOTA_KEYBIND_INVENTORY3 = 88,
    DOTA_KEYBIND_INVENTORY4 = 89,
    DOTA_KEYBIND_INVENTORY5 = 90,
    DOTA_KEYBIND_INVENTORY6 = 91,
    DOTA_KEYBIND_INVENTORYTP = 92,
    DOTA_KEYBIND_INVENTORYNEUTRAL = 93,
    DOTA_KEYBIND_INVENTORY1_QUICKCAST = 94,
    DOTA_KEYBIND_INVENTORY2_QUICKCAST = 95,
    DOTA_KEYBIND_INVENTORY3_QUICKCAST = 96,
    DOTA_KEYBIND_INVENTORY4_QUICKCAST = 97,
    DOTA_KEYBIND_INVENTORY5_QUICKCAST = 98,
    DOTA_KEYBIND_INVENTORY6_QUICKCAST = 99,
    DOTA_KEYBIND_INVENTORYTP_QUICKCAST = 100,
    DOTA_KEYBIND_INVENTORYNEUTRAL_QUICKCAST = 101,
    DOTA_KEYBIND_INVENTORY1_AUTOCAST = 102,
    DOTA_KEYBIND_INVENTORY2_AUTOCAST = 103,
    DOTA_KEYBIND_INVENTORY3_AUTOCAST = 104,
    DOTA_KEYBIND_INVENTORY4_AUTOCAST = 105,
    DOTA_KEYBIND_INVENTORY5_AUTOCAST = 106,
    DOTA_KEYBIND_INVENTORY6_AUTOCAST = 107,
    DOTA_KEYBIND_INVENTORYTP_AUTOCAST = 108,
    DOTA_KEYBIND_INVENTORYNEUTRAL_AUTOCAST = 109,
    DOTA_KEYBIND_INVENTORY1_QUICKAUTOCAST = 110,
    DOTA_KEYBIND_INVENTORY2_QUICKAUTOCAST = 111,
    DOTA_KEYBIND_INVENTORY3_QUICKAUTOCAST = 112,
    DOTA_KEYBIND_INVENTORY4_QUICKAUTOCAST = 113,
    DOTA_KEYBIND_INVENTORY5_QUICKAUTOCAST = 114,
    DOTA_KEYBIND_INVENTORY6_QUICKAUTOCAST = 115,
    DOTA_KEYBIND_INVENTORYTP_QUICKAUTOCAST = 116,
    DOTA_KEYBIND_INVENTORYNEUTRAL_QUICKAUTOCAST = 117,
    DOTA_KEYBIND_CONTROL_GROUP1 = 118,
    DOTA_KEYBIND_CONTROL_GROUP2 = 119,
    DOTA_KEYBIND_CONTROL_GROUP3 = 120,
    DOTA_KEYBIND_CONTROL_GROUP4 = 121,
    DOTA_KEYBIND_CONTROL_GROUP5 = 122,
    DOTA_KEYBIND_CONTROL_GROUP6 = 123,
    DOTA_KEYBIND_CONTROL_GROUP7 = 124,
    DOTA_KEYBIND_CONTROL_GROUP8 = 125,
    DOTA_KEYBIND_CONTROL_GROUP9 = 126,
    DOTA_KEYBIND_CONTROL_GROUP10 = 127,
    DOTA_KEYBIND_CONTROL_GROUPCYCLE = 128,
    DOTA_KEYBIND_SELECT_ALLY1 = 129,
    DOTA_KEYBIND_SELECT_ALLY2 = 130,
    DOTA_KEYBIND_SELECT_ALLY3 = 131,
    DOTA_KEYBIND_SELECT_ALLY4 = 132,
    DOTA_KEYBIND_SELECT_ALLY5 = 133,
    DOTA_KEYBIND_SHOP_TOGGLE = 134,
    DOTA_KEYBIND_SCOREBOARD_TOGGLE = 135,
    DOTA_KEYBIND_COMBATLOG_TOGGLE = 136,
    DOTA_KEYBIND_SCREENSHOT = 137,
    DOTA_KEYBIND_ESCAPE = 138,
    DOTA_KEYBIND_CONSOLE = 139,
    DOTA_KEYBIND_DEATH_SUMMARY = 140,
    DOTA_KEYBIND_LEARN_ABILITIES = 141,
    DOTA_KEYBIND_LEARN_STATS = 142,
    DOTA_KEYBIND_ACTIVATE_GLYPH = 143,
    DOTA_KEYBIND_ACTIVATE_RADAR = 144,
    DOTA_KEYBIND_PURCHASE_QUICKBUY = 145,
    DOTA_KEYBIND_PURCHASE_STICKY = 146,
    DOTA_KEYBIND_GRAB_STASH_ITEMS = 147,
    DOTA_KEYBIND_TOGGLE_AUTOATTACK = 148,
    DOTA_KEYBIND_TOGGLE_OVERLAYMAP = 149,
    DOTA_KEYBIND_OVERLAYMAP_INPUTKEY = 150,
    DOTA_KEYBIND_FILTER_ENEMY = 151,
    DOTA_KEYBIND_FILTER_ALLY = 152,
    DOTA_KEYBIND_FILTER_HERO = 153,
    DOTA_KEYBIND_FILTER_NONHERO = 154,
    DOTA_KEYBIND_TAUNT = 155,
    DOTA_KEYBIND_SHOP_CONSUMABLES = 156,
    DOTA_KEYBIND_SHOP_ATTRIBUTES = 157,
    DOTA_KEYBIND_SHOP_ARMAMENTS = 158,
    DOTA_KEYBIND_SHOP_ARCANE = 159,
    DOTA_KEYBIND_SHOP_BASICS = 160,
    DOTA_KEYBIND_SHOP_SUPPORT = 161,
    DOTA_KEYBIND_SHOP_CASTER = 162,
    DOTA_KEYBIND_SHOP_WEAPONS = 163,
    DOTA_KEYBIND_SHOP_ARMOR = 164,
    DOTA_KEYBIND_SHOP_ARTIFACTS = 165,
    DOTA_KEYBIND_SHOP_SIDE_PAGE_1 = 166,
    DOTA_KEYBIND_SHOP_SIDE_PAGE_2 = 167,
    DOTA_KEYBIND_SHOP_SECRET = 168,
    DOTA_KEYBIND_SHOP_SEARCHBOX = 169,
    DOTA_KEYBIND_SHOP_SLOT_1 = 170,
    DOTA_KEYBIND_SHOP_SLOT_2 = 171,
    DOTA_KEYBIND_SHOP_SLOT_3 = 172,
    DOTA_KEYBIND_SHOP_SLOT_4 = 173,
    DOTA_KEYBIND_SHOP_SLOT_5 = 174,
    DOTA_KEYBIND_SHOP_SLOT_6 = 175,
    DOTA_KEYBIND_SHOP_SLOT_7 = 176,
    DOTA_KEYBIND_SHOP_SLOT_8 = 177,
    DOTA_KEYBIND_SHOP_SLOT_9 = 178,
    DOTA_KEYBIND_SHOP_SLOT_10 = 179,
    DOTA_KEYBIND_SHOP_SLOT_11 = 180,
    DOTA_KEYBIND_SHOP_SLOT_12 = 181,
    DOTA_KEYBIND_SHOP_SLOT_13 = 182,
    DOTA_KEYBIND_SHOP_SLOT_14 = 183,
    DOTA_KEYBIND_SPEC_CAMERA_UP = 184,
    DOTA_KEYBIND_SPEC_CAMERA_DOWN = 185,
    DOTA_KEYBIND_SPEC_CAMERA_LEFT = 186,
    DOTA_KEYBIND_SPEC_CAMERA_RIGHT = 187,
    DOTA_KEYBIND_SPEC_CAMERA_GRIP = 188,
    DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_1 = 189,
    DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_2 = 190,
    DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_3 = 191,
    DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_4 = 192,
    DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_5 = 193,
    DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_6 = 194,
    DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_7 = 195,
    DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_8 = 196,
    DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_9 = 197,
    DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_10 = 198,
    DOTA_KEYBIND_SPEC_UNIT_SELECT = 199,
    DOTA_KEYBIND_SPEC_HERO_SELECT = 200,
    DOTA_KEYBIND_SPEC_PAUSE = 201,
    DOTA_KEYBIND_SPEC_CHAT = 202,
    DOTA_KEYBIND_SPEC_SCOREBOARD = 203,
    DOTA_KEYBIND_SPEC_INCREASE_REPLAY_SPEED = 204,
    DOTA_KEYBIND_SPEC_DECREASE_REPLAY_SPEED = 205,
    DOTA_KEYBIND_SPEC_STATS_ITEM = 206,
    DOTA_KEYBIND_SPEC_STATS_GOLD = 207,
    DOTA_KEYBIND_SPEC_STATS_XP = 208,
    DOTA_KEYBIND_SPEC_STATS_FANTASY = 209,
    DOTA_KEYBIND_SPEC_STATS_WINCHANCE = 210,
    DOTA_KEYBIND_SPEC_FOW_TOGGLEBOTH = 211,
    DOTA_KEYBIND_SPEC_FOW_TOGGLERADIENT = 212,
    DOTA_KEYBIND_SPEC_FOW_TOGGLEDIRE = 213,
    DOTA_KEYBIND_SPEC_OPEN_BROADCASTER_MENU = 214,
    DOTA_KEYBIND_SPEC_DROPDOWN_KDA = 215,
    DOTA_KEYBIND_SPEC_DROPDOWN_LASTHITS_DENIES = 216,
    DOTA_KEYBIND_SPEC_DROPDOWN_LEVEL = 217,
    DOTA_KEYBIND_SPEC_DROPDOWN_XP_PER_MIN = 218,
    DOTA_KEYBIND_SPEC_DROPDOWN_GOLD = 219,
    DOTA_KEYBIND_SPEC_DROPDOWN_TOTALGOLD = 220,
    DOTA_KEYBIND_SPEC_DROPDOWN_GOLD_PER_MIN = 221,
    DOTA_KEYBIND_SPEC_DROPDOWN_BUYBACK = 222,
    DOTA_KEYBIND_SPEC_DROPDOWN_NETWORTH = 223,
    DOTA_KEYBIND_SPEC_DROPDOWN_FANTASY = 224,
    DOTA_KEYBIND_SPEC_DROPDOWN_SORT = 225,
    DOTA_KEYBIND_SPEC_DROPDOWN_CLOSE = 226,
    DOTA_KEYBIND_SPEC_FOCUS_PLAYER_1 = 227,
    DOTA_KEYBIND_SPEC_FOCUS_PLAYER_2 = 228,
    DOTA_KEYBIND_SPEC_FOCUS_PLAYER_3 = 229,
    DOTA_KEYBIND_SPEC_FOCUS_PLAYER_4 = 230,
    DOTA_KEYBIND_SPEC_FOCUS_PLAYER_5 = 231,
    DOTA_KEYBIND_SPEC_FOCUS_PLAYER_6 = 232,
    DOTA_KEYBIND_SPEC_FOCUS_PLAYER_7 = 233,
    DOTA_KEYBIND_SPEC_FOCUS_PLAYER_8 = 234,
    DOTA_KEYBIND_SPEC_FOCUS_PLAYER_9 = 235,
    DOTA_KEYBIND_SPEC_FOCUS_PLAYER_10 = 236,
    DOTA_KEYBIND_SPEC_COACH_VIEWTOGGLE = 237,
    DOTA_KEYBIND_INSPECTHEROINWORLD = 238,
    DOTA_KEYBIND_CAMERA_ZOOM_IN = 239,
    DOTA_KEYBIND_CAMERA_ZOOM_OUT = 240,
    DOTA_KEYBIND_CONTROL_GROUPCYCLEPREV = 241,
    DOTA_KEYBIND_DOTA_ALT = 242,
    DOTA_KEYBIND_DOTA_ALTERNATIVE_CAST_SWITCH = 243,
    DOTA_KEYBIND_COUNT = 244,
}

/**
 * @deprecated Normalized enum name. Defined only for library compatibility.
 */
type ShopType = DOTA_SHOP_TYPE;

declare enum DOTA_SHOP_TYPE {
    DOTA_SHOP_HOME = 0,
    DOTA_SHOP_SIDE = 1,
    DOTA_SHOP_SECRET = 2,
    DOTA_SHOP_GROUND = 3,
    DOTA_SHOP_SIDE2 = 4,
    DOTA_SHOP_SECRET2 = 5,
    DOTA_SHOP_CUSTOM = 6,
    DOTA_SHOP_NEUTRALS = 7,
    DOTA_SHOP_NONE = 8,
}
